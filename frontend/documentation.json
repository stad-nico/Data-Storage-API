{
    "pipes": [],
    "interfaces": [
        {
            "name": "ContentListStateModel",
            "id": "interface-ContentListStateModel-976f31343454c98559106f17236542240dd0c4abdafb645f4290e0de658f363e44595fae40a6b431013636b66e35b93397b2004dd22aceccf253275c746e5478",
            "file": "src/app/features/content-list/state/content-list.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { patch, updateItem } from '@ngxs/store/operators';\r\nimport { ContentType, Type } from 'src/app/features/content-list/components/pure-content-list/pure-content-list.component';\r\nimport { ContentListActions } from 'src/app/features/content-list/state/content-list.actions';\r\n\r\nexport interface ContentListStateModel {\r\n\titems: ContentType[];\r\n\tlastInteractedId: number | undefined;\r\n}\r\n\r\n@State<ContentListStateModel>({\r\n\tname: 'content_list',\r\n\tdefaults: {\r\n\t\titems: [\r\n\t\t\t{\r\n\t\t\t\ttype: Type.Directory,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 0,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.Directory,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 1,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.File,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tmimeType: 'text/plain',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 2,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.File,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tmimeType: 'text/plain',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 3,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.Directory,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 4,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.Directory,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 5,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.File,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tmimeType: 'text/plain',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 6,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.File,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tmimeType: 'text/plain',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 7,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t],\r\n\t\tlastInteractedId: undefined,\r\n\t},\r\n})\r\n@Injectable()\r\nexport class ContentListState {\r\n\t@Selector()\r\n\tpublic static getContent(state: ContentListStateModel) {\r\n\t\treturn state.items;\r\n\t}\r\n\r\n\t@Selector()\r\n\tpublic static isAtLeastOneSelected(state: ContentListStateModel) {\r\n\t\treturn state.items.some((item) => item.isSelected);\r\n\t}\r\n\r\n\t@Action(ContentListActions.SelectSingle)\r\n\tpublic selectItem(ctx: StateContext<ContentListStateModel>, action: ContentListActions.SelectSingle) {\r\n\t\tctx.setState(\r\n\t\t\tpatch({\r\n\t\t\t\titems: updateItem((item) => item.id === action.id, patch({ isSelected: true })),\r\n\t\t\t\tlastInteractedId: action.id,\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t@Action(ContentListActions.UnselectSingle)\r\n\tpublic unselectItem(ctx: StateContext<ContentListStateModel>, action: ContentListActions.UnselectSingle) {\r\n\t\tctx.setState(\r\n\t\t\tpatch({\r\n\t\t\t\titems: updateItem((item) => item.id === action.id, patch({ isSelected: false })),\r\n\t\t\t\tlastInteractedId: action.id,\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t@Action([ContentListActions.ShiftSelect, ContentListActions.CtrlSelect])\r\n\tpublic rangeSelect(ctx: StateContext<ContentListStateModel>, action: ContentListActions.ShiftSelect | ContentListActions.CtrlSelect) {\r\n\t\tconst lastInteractedId = ctx.getState().lastInteractedId;\r\n\r\n\t\tif (lastInteractedId === undefined) {\r\n\t\t\tctx.dispatch(new ContentListActions.SelectSingle(action.id));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst start = Math.min(lastInteractedId, action.id);\r\n\t\tconst end = Math.max(lastInteractedId, action.id);\r\n\r\n\t\tif (end - start <= 2 || this.isUnselectedInRange(ctx, start, end)) {\r\n\t\t\tthis.selectRange(ctx, start, end);\r\n\t\t} else {\r\n\t\t\tthis.unselectRange(ctx, start, end);\r\n\t\t}\r\n\t}\r\n\r\n\t@Action([ContentListActions.ShiftUnselect, ContentListActions.CtrlUnselect])\r\n\tpublic rangeUnselect(ctx: StateContext<ContentListStateModel>, action: ContentListActions.ShiftUnselect | ContentListActions.CtrlUnselect) {\r\n\t\tconst lastInteractedId = ctx.getState().lastInteractedId;\r\n\r\n\t\tif (lastInteractedId === undefined) {\r\n\t\t\tctx.dispatch(new ContentListActions.SelectSingle(action.id));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst start = Math.min(lastInteractedId, action.id);\r\n\t\tconst end = Math.max(lastInteractedId, action.id);\r\n\r\n\t\tthis.unselectRange(ctx, start === action.id ? start + 1 : start, end);\r\n\r\n\t\tctx.dispatch(new ContentListActions.SelectSingle(action.id));\r\n\t}\r\n\r\n\t@Action(ContentListActions.SelectAll)\r\n\tpublic selectAll(ctx: StateContext<ContentListStateModel>) {\r\n\t\tconst items = ctx.getState().items;\r\n\r\n\t\tctx.setState({\r\n\t\t\titems: items.map((item) => ({ ...item, isSelected: true })),\r\n\t\t\tlastInteractedId: items.at(-1)?.id,\r\n\t\t});\r\n\t}\r\n\r\n\t@Action(ContentListActions.UnselectAll)\r\n\tpublic unselectAll(ctx: StateContext<ContentListStateModel>) {\r\n\t\tconst items = ctx.getState().items;\r\n\r\n\t\tctx.setState({\r\n\t\t\titems: items.map((item) => ({ ...item, isSelected: false })),\r\n\t\t\tlastInteractedId: items.at(0)?.id,\r\n\t\t});\r\n\t}\r\n\r\n\tprivate selectRange(ctx: StateContext<ContentListStateModel>, start: number, end: number) {\r\n\t\tfor (let i = start; i <= end; i++) {\r\n\t\t\tctx.dispatch(new ContentListActions.SelectSingle(i));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate unselectRange(ctx: StateContext<ContentListStateModel>, start: number, end: number) {\r\n\t\tfor (let i = start; i <= end; i++) {\r\n\t\t\tctx.dispatch(new ContentListActions.UnselectSingle(i));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isUnselectedInRange(ctx: StateContext<ContentListStateModel>, from: number, to: number): boolean {\r\n\t\tif (from > to) {\r\n\t\t\t[from, to] = [to, from];\r\n\t\t}\r\n\r\n\t\treturn ctx.getState().items.find((item) => item.id >= from && item.id <= to && !item.isSelected) !== undefined;\r\n\t}\r\n}\r\n",
            "properties": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContentType[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "lastInteractedId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IDeletable",
            "id": "interface-IDeletable-3bc82e5bb7a098c58bfb3c2da11d09c55587e42d8486dbbdfb83a7354ce13ce9c6f1cd93b258daf3d0c26ec2beba73f2195af5fe99a6b0adb6238b176876f52b",
            "file": "src/app/shared/models/IDeletable.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IDeletable {\r\n\tdelete(): void;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 173,
            "methods": [
                {
                    "name": "delete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": []
        },
        {
            "name": "IDownloadable",
            "id": "interface-IDownloadable-14f1252c62ca6fadedcfe069d780593d55f64820828c14f7ad65bb4a71cc40bccad86950318ffeb3873856d755870b9b2e849cd7bd86aaacfa0d63945c96a045",
            "file": "src/app/shared/models/IDownloadable.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IDownloadable {\r\n\tdownload(): void;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 173,
            "methods": [
                {
                    "name": "download",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": []
        },
        {
            "name": "IRenamable",
            "id": "interface-IRenamable-42e3241a2f7d646f3a497c5a5ad292cc3cac6454eebed20ee96bf0279655bc31ee487d58dd92f543193fb442811b8bddf31146487d270ae75520455884003eb4",
            "file": "src/app/shared/models/IRenamable.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IRenamable {\r\n\trename(): void;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 173,
            "methods": [
                {
                    "name": "rename",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": []
        },
        {
            "name": "ISelectable",
            "id": "interface-ISelectable-672847f4b7d0103733d3fe22ac4fc7c1abf5d05e4b4647c0932a9a43f2ec35c7270dfde138fa792411db2626b82bdc87d07d115273d965b1daf06d7c449111ae",
            "file": "src/app/shared/models/ISelectable.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISelectable {\r\n\tselect(): void;\r\n\tunselect(): void;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 173,
            "methods": [
                {
                    "name": "select",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unselect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "ContentListService",
            "id": "injectable-ContentListService-c0a4e015373627af1e50967fb3f02be6eb9f85d3f44a83e07d2075a14b650b1ed4f446eaed3ad315c06d7bb3214a29be2717a58ec081ab22cca599d96ed4e45b",
            "file": "src/app/features/content-list/content-list.service.ts",
            "properties": [
                {
                    "name": "store",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Store",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getContent",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Array<ContentType>>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isAtLeastOneSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "event",
                            "type": "ListItemSelectEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ListItemSelectEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "unselect",
                    "args": [
                        {
                            "name": "event",
                            "type": "ListItemUnselectEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ListItemUnselectEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unselectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n\tListItemSelectEvent,\r\n\tListItemUnselectEvent,\r\n} from 'src/app/features/content-list/components/pure-content-list/components/selectable-directory-list-item/selectable-directory-list-item.component';\r\nimport { ContentType } from 'src/app/features/content-list/components/pure-content-list/pure-content-list.component';\r\nimport { ContentListActions } from 'src/app/features/content-list/state/content-list.actions';\r\nimport { ContentListState } from 'src/app/features/content-list/state/content-list.state';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class ContentListService {\r\n\tprivate readonly store: Store;\r\n\r\n\tconstructor(store: Store) {\r\n\t\tthis.store = store;\r\n\t}\r\n\r\n\tpublic getContent(): Observable<Array<ContentType>> {\r\n\t\treturn this.store.select(ContentListState.getContent);\r\n\t}\r\n\r\n\tpublic isAtLeastOneSelected(): Observable<boolean> {\r\n\t\treturn this.store.select(ContentListState.isAtLeastOneSelected);\r\n\t}\r\n\r\n\tpublic select(event: ListItemSelectEvent) {\r\n\t\tif (event.shift) {\r\n\t\t\tthis.store.dispatch(new ContentListActions.ShiftSelect(event.id));\r\n\t\t} else if (event.ctrl) {\r\n\t\t\tthis.store.dispatch(new ContentListActions.CtrlSelect(event.id));\r\n\t\t} else {\r\n\t\t\tthis.store.dispatch(new ContentListActions.SelectSingle(event.id));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unselect(event: ListItemUnselectEvent) {\r\n\t\tif (event.shift) {\r\n\t\t\tthis.store.dispatch(new ContentListActions.ShiftUnselect(event.id));\r\n\t\t} else if (event.ctrl) {\r\n\t\t\tthis.store.dispatch(new ContentListActions.CtrlUnselect(event.id));\r\n\t\t} else {\r\n\t\t\tthis.store.dispatch(new ContentListActions.UnselectSingle(event.id));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic selectAll() {\r\n\t\tthis.store.dispatch(new ContentListActions.SelectAll());\r\n\t}\r\n\r\n\tpublic unselectAll() {\r\n\t\tthis.store.dispatch(new ContentListActions.UnselectAll());\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ContentListState",
            "id": "injectable-ContentListState-976f31343454c98559106f17236542240dd0c4abdafb645f4290e0de658f363e44595fae40a6b431013636b66e35b93397b2004dd22aceccf253275c746e5478",
            "file": "src/app/features/content-list/state/content-list.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getContent",
                    "args": [
                        {
                            "name": "state",
                            "type": "ContentListStateModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "ContentListStateModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAtLeastOneSelected",
                    "args": [
                        {
                            "name": "state",
                            "type": "ContentListStateModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        170,
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "ContentListStateModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isUnselectedInRange",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "from",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "to",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 196,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "from",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "to",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "rangeSelect",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "ContentListActions.ShiftSelect | ContentListActions.CtrlSelect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "['undefined', 'undefined']"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "ContentListActions.ShiftSelect | ContentListActions.CtrlSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "rangeUnselect",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "ContentListActions.ShiftUnselect | ContentListActions.CtrlUnselect",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "['undefined', 'undefined']"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "ContentListActions.ShiftUnselect | ContentListActions.CtrlUnselect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "ContentListActions.SelectAll"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectItem",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "ContentListActions.SelectSingle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "ContentListActions.SelectSingle"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "ContentListActions.SelectSingle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectRange",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unselectAll",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "ContentListActions.UnselectAll"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unselectItem",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "ContentListActions.UnselectSingle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "ContentListActions.UnselectSingle"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "ContentListActions.UnselectSingle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unselectRange",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<ContentListStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "start",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "end",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { patch, updateItem } from '@ngxs/store/operators';\r\nimport { ContentType, Type } from 'src/app/features/content-list/components/pure-content-list/pure-content-list.component';\r\nimport { ContentListActions } from 'src/app/features/content-list/state/content-list.actions';\r\n\r\nexport interface ContentListStateModel {\r\n\titems: ContentType[];\r\n\tlastInteractedId: number | undefined;\r\n}\r\n\r\n@State<ContentListStateModel>({\r\n\tname: 'content_list',\r\n\tdefaults: {\r\n\t\titems: [\r\n\t\t\t{\r\n\t\t\t\ttype: Type.Directory,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 0,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.Directory,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 1,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.File,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tmimeType: 'text/plain',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 2,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.File,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tmimeType: 'text/plain',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 3,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.Directory,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 4,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.Directory,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 5,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.File,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tmimeType: 'text/plain',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 6,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: Type.File,\r\n\t\t\t\tname: 'element',\r\n\t\t\t\tmimeType: 'text/plain',\r\n\t\t\t\tsize: 239,\r\n\t\t\t\tcreatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tupdatedAt: new Date(Date.now()).toISOString(),\r\n\t\t\t\tid: 7,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t},\r\n\t\t],\r\n\t\tlastInteractedId: undefined,\r\n\t},\r\n})\r\n@Injectable()\r\nexport class ContentListState {\r\n\t@Selector()\r\n\tpublic static getContent(state: ContentListStateModel) {\r\n\t\treturn state.items;\r\n\t}\r\n\r\n\t@Selector()\r\n\tpublic static isAtLeastOneSelected(state: ContentListStateModel) {\r\n\t\treturn state.items.some((item) => item.isSelected);\r\n\t}\r\n\r\n\t@Action(ContentListActions.SelectSingle)\r\n\tpublic selectItem(ctx: StateContext<ContentListStateModel>, action: ContentListActions.SelectSingle) {\r\n\t\tctx.setState(\r\n\t\t\tpatch({\r\n\t\t\t\titems: updateItem((item) => item.id === action.id, patch({ isSelected: true })),\r\n\t\t\t\tlastInteractedId: action.id,\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t@Action(ContentListActions.UnselectSingle)\r\n\tpublic unselectItem(ctx: StateContext<ContentListStateModel>, action: ContentListActions.UnselectSingle) {\r\n\t\tctx.setState(\r\n\t\t\tpatch({\r\n\t\t\t\titems: updateItem((item) => item.id === action.id, patch({ isSelected: false })),\r\n\t\t\t\tlastInteractedId: action.id,\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\t@Action([ContentListActions.ShiftSelect, ContentListActions.CtrlSelect])\r\n\tpublic rangeSelect(ctx: StateContext<ContentListStateModel>, action: ContentListActions.ShiftSelect | ContentListActions.CtrlSelect) {\r\n\t\tconst lastInteractedId = ctx.getState().lastInteractedId;\r\n\r\n\t\tif (lastInteractedId === undefined) {\r\n\t\t\tctx.dispatch(new ContentListActions.SelectSingle(action.id));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst start = Math.min(lastInteractedId, action.id);\r\n\t\tconst end = Math.max(lastInteractedId, action.id);\r\n\r\n\t\tif (end - start <= 2 || this.isUnselectedInRange(ctx, start, end)) {\r\n\t\t\tthis.selectRange(ctx, start, end);\r\n\t\t} else {\r\n\t\t\tthis.unselectRange(ctx, start, end);\r\n\t\t}\r\n\t}\r\n\r\n\t@Action([ContentListActions.ShiftUnselect, ContentListActions.CtrlUnselect])\r\n\tpublic rangeUnselect(ctx: StateContext<ContentListStateModel>, action: ContentListActions.ShiftUnselect | ContentListActions.CtrlUnselect) {\r\n\t\tconst lastInteractedId = ctx.getState().lastInteractedId;\r\n\r\n\t\tif (lastInteractedId === undefined) {\r\n\t\t\tctx.dispatch(new ContentListActions.SelectSingle(action.id));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst start = Math.min(lastInteractedId, action.id);\r\n\t\tconst end = Math.max(lastInteractedId, action.id);\r\n\r\n\t\tthis.unselectRange(ctx, start === action.id ? start + 1 : start, end);\r\n\r\n\t\tctx.dispatch(new ContentListActions.SelectSingle(action.id));\r\n\t}\r\n\r\n\t@Action(ContentListActions.SelectAll)\r\n\tpublic selectAll(ctx: StateContext<ContentListStateModel>) {\r\n\t\tconst items = ctx.getState().items;\r\n\r\n\t\tctx.setState({\r\n\t\t\titems: items.map((item) => ({ ...item, isSelected: true })),\r\n\t\t\tlastInteractedId: items.at(-1)?.id,\r\n\t\t});\r\n\t}\r\n\r\n\t@Action(ContentListActions.UnselectAll)\r\n\tpublic unselectAll(ctx: StateContext<ContentListStateModel>) {\r\n\t\tconst items = ctx.getState().items;\r\n\r\n\t\tctx.setState({\r\n\t\t\titems: items.map((item) => ({ ...item, isSelected: false })),\r\n\t\t\tlastInteractedId: items.at(0)?.id,\r\n\t\t});\r\n\t}\r\n\r\n\tprivate selectRange(ctx: StateContext<ContentListStateModel>, start: number, end: number) {\r\n\t\tfor (let i = start; i <= end; i++) {\r\n\t\t\tctx.dispatch(new ContentListActions.SelectSingle(i));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate unselectRange(ctx: StateContext<ContentListStateModel>, start: number, end: number) {\r\n\t\tfor (let i = start; i <= end; i++) {\r\n\t\t\tctx.dispatch(new ContentListActions.UnselectSingle(i));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isUnselectedInRange(ctx: StateContext<ContentListStateModel>, from: number, to: number): boolean {\r\n\t\tif (from > to) {\r\n\t\t\t[from, to] = [to, from];\r\n\t\t}\r\n\r\n\t\treturn ctx.getState().items.find((item) => item.id >= from && item.id <= to && !item.isSelected) !== undefined;\r\n\t}\r\n}\r\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "DirectoryTreeState",
            "id": "injectable-DirectoryTreeState-30fa0e2b58cf5883ec128c2ad02d0b8ee4899bbfeab6d42d580697acb6170d3b338a13d8c9b9f9205e90fdf9e8906147d4380ecf0134e312f7aff3f3aac9065f",
            "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
            "properties": [],
            "methods": [
                {
                    "name": "collapse",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<DirectoryTreeStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "DirectoryTreeActions.Collapse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "DirectoryTreeActions.Collapse"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<DirectoryTreeStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "DirectoryTreeActions.Collapse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "expand",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<DirectoryTreeStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "DirectoryTreeActions.Expand",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "DirectoryTreeActions.Expand"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<DirectoryTreeStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "DirectoryTreeActions.Expand",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "ctx",
                            "type": "StateContext<DirectoryTreeStateModel>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "DirectoryTreeActions.Select",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Action",
                            "stringifiedArguments": "DirectoryTreeActions.Select"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "ctx",
                            "type": "StateContext<DirectoryTreeStateModel>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "DirectoryTreeActions.Select",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Action, State, StateContext } from '@ngxs/store';\r\nimport { compose, StateOperator } from '@ngxs/store/operators';\r\nimport { DirectoryTreeActions } from 'src/app/features/directory-tree/state/directory-tree.actions';\r\n\r\nexport type Leaf = { name: string; hasChildren: false; isSelected: boolean; id: number };\r\n\r\nexport type Node = { name: string; hasChildren: true; isCollapsed: boolean; children: Array<Node | Leaf>; isSelected: boolean; id: number };\r\n\r\nexport type DirectoryTreeItemMetadata = { name: string; hasChildren: boolean; isCollapsed: boolean; children: Array<DirectoryTreeItemMetadata> };\r\n\r\nexport const DirectoryTreeStateToken = 'directory_tree';\r\n\r\nexport type DirectoryTreeStateModel = Node | Leaf;\r\n\r\n@State<DirectoryTreeStateModel>({\r\n\tname: DirectoryTreeStateToken,\r\n\tdefaults: {\r\n\t\tname: 'root',\r\n\t\thasChildren: true,\r\n\t\tisCollapsed: false,\r\n\t\tisSelected: false,\r\n\t\tid: 0,\r\n\t\tchildren: [\r\n\t\t\t{ name: 'example1', hasChildren: false, isSelected: false, id: 1 },\r\n\t\t\t{ name: 'example2', hasChildren: false, isSelected: false, id: 2 },\r\n\t\t\t{\r\n\t\t\t\tname: 'example3',\r\n\t\t\t\thasChildren: true,\r\n\t\t\t\tisCollapsed: false,\r\n\t\t\t\tisSelected: false,\r\n\t\t\t\tid: 3,\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'test',\r\n\t\t\t\t\t\thasChildren: true,\r\n\t\t\t\t\t\tisCollapsed: false,\r\n\t\t\t\t\t\tisSelected: false,\r\n\t\t\t\t\t\tid: 4,\r\n\t\t\t\t\t\tchildren: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tname: 'test',\r\n\t\t\t\t\t\t\t\thasChildren: false,\r\n\t\t\t\t\t\t\t\tisSelected: false,\r\n\t\t\t\t\t\t\t\tid: 5,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n})\r\n@Injectable()\r\nexport class DirectoryTreeState {\r\n\t@Action(DirectoryTreeActions.Select)\r\n\tpublic select(ctx: StateContext<DirectoryTreeStateModel>, action: DirectoryTreeActions.Select) {\r\n\t\tctx.setState(\r\n\t\t\tcompose(\r\n\t\t\t\tpatchRecursive((n) => true, { isSelected: false }, false),\r\n\t\t\t\tpatchRecursive((n) => n.id === action.id, { isSelected: true })\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t@Action(DirectoryTreeActions.Collapse)\r\n\tpublic collapse(ctx: StateContext<DirectoryTreeStateModel>, action: DirectoryTreeActions.Collapse) {\r\n\t\tctx.setState(patchRecursive((n) => n.id === action.id, { isCollapsed: true }));\r\n\t}\r\n\r\n\t@Action(DirectoryTreeActions.Expand)\r\n\tpublic expand(ctx: StateContext<DirectoryTreeStateModel>, action: DirectoryTreeActions.Expand) {\r\n\t\tctx.setState(patchRecursive((n) => n.id === action.id, { isCollapsed: false }));\r\n\t}\r\n}\r\n\r\nfunction patchRecursive(selector: (n: Node | Leaf) => boolean, obj: Object, stopOnMatch: boolean = true): StateOperator<Node | Leaf> {\r\n\tfunction recursive(nodeOrLeaf: Node | Leaf): Node | Leaf {\r\n\t\tif (selector(nodeOrLeaf)) {\r\n\t\t\tif (stopOnMatch) {\r\n\t\t\t\treturn { ...nodeOrLeaf, ...obj };\r\n\t\t\t} else {\r\n\t\t\t\tif (isLeaf(nodeOrLeaf)) {\r\n\t\t\t\t\treturn { ...nodeOrLeaf, ...obj };\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn { ...nodeOrLeaf, ...obj, children: nodeOrLeaf.children.map((child) => recursive(child)) };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isLeaf(nodeOrLeaf)) {\r\n\t\t\treturn nodeOrLeaf;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t...nodeOrLeaf,\r\n\t\t\tchildren: nodeOrLeaf.children.map((child) => recursive(child)),\r\n\t\t};\r\n\t}\r\n\r\n\treturn (state: Node | Leaf) => recursive(state);\r\n}\r\n\r\nfunction isLeaf(leafOrNode: Leaf | Node): leafOrNode is Leaf {\r\n\treturn !('children' in leafOrNode);\r\n}\r\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "Collapse",
            "id": "class-Collapse-363bf1b15bbb73a2d1057bedb3de52725f7e647cdeba374e000ed0fd1c28abb4b2d73ac3c0337690aedf7f288ce2d457860d4e1a1e2afdfc392ca9ca77f18225",
            "file": "src/app/features/directory-tree/state/directory-tree.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace DirectoryTreeActions {\r\n\texport class Select {\r\n\t\tpublic static readonly type = '[Directory Tree] Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Expand {\r\n\t\tpublic static readonly type = '[Directory Tree] Expand';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Collapse {\r\n\t\tpublic static readonly type = '[Directory Tree] Collapse';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Directory Tree] Collapse'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CtrlSelect",
            "id": "class-CtrlSelect-db8ec6c816cf8902681b71b1d7923e89f7f08367f70fae9b630eeb94b09a776c88713ba1dd5e1474b530789c766a90485c2e8b4c29e1055b2d28421c2c22f089",
            "file": "src/app/features/content-list/state/content-list.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace ContentListActions {\r\n\texport class SelectSingle {\r\n\t\tpublic static readonly type = '[Content List] Select Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class UnselectSingle {\r\n\t\tpublic static readonly type = '[Content List] Unselect Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class SelectAll {\r\n\t\tpublic static readonly type = '[Content List] Select All';\r\n\t}\r\n\r\n\texport class UnselectAll {\r\n\t\tpublic static readonly type = '[Content List] Unselect All';\r\n\t}\r\n\r\n\texport class ShiftSelect {\r\n\t\tpublic static readonly type = '[Content List] Shift Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class ShiftUnselect {\r\n\t\tpublic static readonly type = '[Content List] Shift Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlSelect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlUnselect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Content List] Ctrl Select'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CtrlUnselect",
            "id": "class-CtrlUnselect-db8ec6c816cf8902681b71b1d7923e89f7f08367f70fae9b630eeb94b09a776c88713ba1dd5e1474b530789c766a90485c2e8b4c29e1055b2d28421c2c22f089",
            "file": "src/app/features/content-list/state/content-list.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace ContentListActions {\r\n\texport class SelectSingle {\r\n\t\tpublic static readonly type = '[Content List] Select Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class UnselectSingle {\r\n\t\tpublic static readonly type = '[Content List] Unselect Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class SelectAll {\r\n\t\tpublic static readonly type = '[Content List] Select All';\r\n\t}\r\n\r\n\texport class UnselectAll {\r\n\t\tpublic static readonly type = '[Content List] Unselect All';\r\n\t}\r\n\r\n\texport class ShiftSelect {\r\n\t\tpublic static readonly type = '[Content List] Shift Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class ShiftUnselect {\r\n\t\tpublic static readonly type = '[Content List] Shift Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlSelect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlUnselect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 63,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Content List] Ctrl Unselect'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Expand",
            "id": "class-Expand-363bf1b15bbb73a2d1057bedb3de52725f7e647cdeba374e000ed0fd1c28abb4b2d73ac3c0337690aedf7f288ce2d457860d4e1a1e2afdfc392ca9ca77f18225",
            "file": "src/app/features/directory-tree/state/directory-tree.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace DirectoryTreeActions {\r\n\texport class Select {\r\n\t\tpublic static readonly type = '[Directory Tree] Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Expand {\r\n\t\tpublic static readonly type = '[Directory Tree] Expand';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Collapse {\r\n\t\tpublic static readonly type = '[Directory Tree] Collapse';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Directory Tree] Expand'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Select",
            "id": "class-Select-363bf1b15bbb73a2d1057bedb3de52725f7e647cdeba374e000ed0fd1c28abb4b2d73ac3c0337690aedf7f288ce2d457860d4e1a1e2afdfc392ca9ca77f18225",
            "file": "src/app/features/directory-tree/state/directory-tree.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace DirectoryTreeActions {\r\n\texport class Select {\r\n\t\tpublic static readonly type = '[Directory Tree] Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Expand {\r\n\t\tpublic static readonly type = '[Directory Tree] Expand';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Collapse {\r\n\t\tpublic static readonly type = '[Directory Tree] Collapse';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Directory Tree] Select'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SelectAll",
            "id": "class-SelectAll-db8ec6c816cf8902681b71b1d7923e89f7f08367f70fae9b630eeb94b09a776c88713ba1dd5e1474b530789c766a90485c2e8b4c29e1055b2d28421c2c22f089",
            "file": "src/app/features/content-list/state/content-list.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace ContentListActions {\r\n\texport class SelectSingle {\r\n\t\tpublic static readonly type = '[Content List] Select Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class UnselectSingle {\r\n\t\tpublic static readonly type = '[Content List] Unselect Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class SelectAll {\r\n\t\tpublic static readonly type = '[Content List] Select All';\r\n\t}\r\n\r\n\texport class UnselectAll {\r\n\t\tpublic static readonly type = '[Content List] Unselect All';\r\n\t}\r\n\r\n\texport class ShiftSelect {\r\n\t\tpublic static readonly type = '[Content List] Shift Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class ShiftUnselect {\r\n\t\tpublic static readonly type = '[Content List] Shift Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlSelect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlUnselect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[Content List] Select All'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SelectSingle",
            "id": "class-SelectSingle-db8ec6c816cf8902681b71b1d7923e89f7f08367f70fae9b630eeb94b09a776c88713ba1dd5e1474b530789c766a90485c2e8b4c29e1055b2d28421c2c22f089",
            "file": "src/app/features/content-list/state/content-list.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace ContentListActions {\r\n\texport class SelectSingle {\r\n\t\tpublic static readonly type = '[Content List] Select Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class UnselectSingle {\r\n\t\tpublic static readonly type = '[Content List] Unselect Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class SelectAll {\r\n\t\tpublic static readonly type = '[Content List] Select All';\r\n\t}\r\n\r\n\texport class UnselectAll {\r\n\t\tpublic static readonly type = '[Content List] Unselect All';\r\n\t}\r\n\r\n\texport class ShiftSelect {\r\n\t\tpublic static readonly type = '[Content List] Shift Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class ShiftUnselect {\r\n\t\tpublic static readonly type = '[Content List] Shift Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlSelect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlUnselect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Content List] Select Single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ShiftSelect",
            "id": "class-ShiftSelect-db8ec6c816cf8902681b71b1d7923e89f7f08367f70fae9b630eeb94b09a776c88713ba1dd5e1474b530789c766a90485c2e8b4c29e1055b2d28421c2c22f089",
            "file": "src/app/features/content-list/state/content-list.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace ContentListActions {\r\n\texport class SelectSingle {\r\n\t\tpublic static readonly type = '[Content List] Select Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class UnselectSingle {\r\n\t\tpublic static readonly type = '[Content List] Unselect Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class SelectAll {\r\n\t\tpublic static readonly type = '[Content List] Select All';\r\n\t}\r\n\r\n\texport class UnselectAll {\r\n\t\tpublic static readonly type = '[Content List] Unselect All';\r\n\t}\r\n\r\n\texport class ShiftSelect {\r\n\t\tpublic static readonly type = '[Content List] Shift Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class ShiftUnselect {\r\n\t\tpublic static readonly type = '[Content List] Shift Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlSelect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlUnselect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Content List] Shift Select'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ShiftUnselect",
            "id": "class-ShiftUnselect-db8ec6c816cf8902681b71b1d7923e89f7f08367f70fae9b630eeb94b09a776c88713ba1dd5e1474b530789c766a90485c2e8b4c29e1055b2d28421c2c22f089",
            "file": "src/app/features/content-list/state/content-list.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace ContentListActions {\r\n\texport class SelectSingle {\r\n\t\tpublic static readonly type = '[Content List] Select Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class UnselectSingle {\r\n\t\tpublic static readonly type = '[Content List] Unselect Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class SelectAll {\r\n\t\tpublic static readonly type = '[Content List] Select All';\r\n\t}\r\n\r\n\texport class UnselectAll {\r\n\t\tpublic static readonly type = '[Content List] Unselect All';\r\n\t}\r\n\r\n\texport class ShiftSelect {\r\n\t\tpublic static readonly type = '[Content List] Shift Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class ShiftUnselect {\r\n\t\tpublic static readonly type = '[Content List] Shift Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlSelect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlUnselect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Content List] Shift Unselect'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UnselectAll",
            "id": "class-UnselectAll-db8ec6c816cf8902681b71b1d7923e89f7f08367f70fae9b630eeb94b09a776c88713ba1dd5e1474b530789c766a90485c2e8b4c29e1055b2d28421c2c22f089",
            "file": "src/app/features/content-list/state/content-list.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace ContentListActions {\r\n\texport class SelectSingle {\r\n\t\tpublic static readonly type = '[Content List] Select Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class UnselectSingle {\r\n\t\tpublic static readonly type = '[Content List] Unselect Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class SelectAll {\r\n\t\tpublic static readonly type = '[Content List] Select All';\r\n\t}\r\n\r\n\texport class UnselectAll {\r\n\t\tpublic static readonly type = '[Content List] Unselect All';\r\n\t}\r\n\r\n\texport class ShiftSelect {\r\n\t\tpublic static readonly type = '[Content List] Shift Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class ShiftUnselect {\r\n\t\tpublic static readonly type = '[Content List] Shift Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlSelect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlUnselect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "'[Content List] Unselect All'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UnselectSingle",
            "id": "class-UnselectSingle-db8ec6c816cf8902681b71b1d7923e89f7f08367f70fae9b630eeb94b09a776c88713ba1dd5e1474b530789c766a90485c2e8b4c29e1055b2d28421c2c22f089",
            "file": "src/app/features/content-list/state/content-list.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export namespace ContentListActions {\r\n\texport class SelectSingle {\r\n\t\tpublic static readonly type = '[Content List] Select Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class UnselectSingle {\r\n\t\tpublic static readonly type = '[Content List] Unselect Single';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class SelectAll {\r\n\t\tpublic static readonly type = '[Content List] Select All';\r\n\t}\r\n\r\n\texport class UnselectAll {\r\n\t\tpublic static readonly type = '[Content List] Unselect All';\r\n\t}\r\n\r\n\texport class ShiftSelect {\r\n\t\tpublic static readonly type = '[Content List] Shift Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class ShiftUnselect {\r\n\t\tpublic static readonly type = '[Content List] Shift Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlSelect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Select';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n\r\n\texport class CtrlUnselect {\r\n\t\tpublic static readonly type = '[Content List] Ctrl Unselect';\r\n\r\n\t\tpublic readonly id: number;\r\n\r\n\t\tconstructor(id: number) {\r\n\t\t\tthis.id = id;\r\n\t\t}\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "'[Content List] Unselect Single'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        126,
                        148
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-45649654b59f7094c2c240c2a6c25c5e6e3246ab351a412425f87eac2494a74a7eebad606deb9b0566ec1902efbc7c2680ff23eea68640ca772d77765c8a8420",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lightTheme",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.light-theme'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.light-theme",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ContentListComponent",
                    "type": "component"
                },
                {
                    "name": "DirectoryTreeComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding } from '@angular/core';\r\nimport { ContentListComponent } from 'src/app/features/content-list/content-list.component';\r\nimport { DirectoryTreeComponent } from 'src/app/features/directory-tree/directory-tree.component';\r\n\r\n@Component({\r\n\tstandalone: true,\r\n\tselector: 'app',\r\n\ttemplateUrl: './app.component.html',\r\n\timports: [ContentListComponent, DirectoryTreeComponent],\r\n})\r\nexport class AppComponent {\r\n\t@HostBinding('class.light-theme')\r\n\tprivate readonly lightTheme: boolean = true;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<directory-tree></directory-tree>\r\n<content-list></content-list>\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-07d1c05e05026dbb42b2a600e98b4a87032791f1173be1b6262eac59298273f86a37c754ffa721d55a7c36ae1c8b5627fbd1f55ca5560ce7d5b5b9fb86f7b602",
            "file": "src/app/shared/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCheck",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<CheckboxCheckEvent>"
                },
                {
                    "name": "onUncheck",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter<CheckboxUncheckEvent>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "PointerEvent | MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PointerEvent | MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, HostBinding, Input, Output, ViewChild } from '@angular/core';\r\n\r\nexport type CheckboxCheckEvent = {\r\n\tctrl: boolean;\r\n\tshift: boolean;\r\n\talt: boolean;\r\n\tnativeEvent: MouseEvent | PointerEvent;\r\n};\r\n\r\nexport type CheckboxUncheckEvent = {\r\n\tctrl: boolean;\r\n\tshift: boolean;\r\n\talt: boolean;\r\n\tnativeEvent: MouseEvent | PointerEvent;\r\n};\r\n\r\n@Component({\r\n\tselector: 'checkbox',\r\n\tstandalone: true,\r\n\ttemplateUrl: './checkbox.component.html',\r\n\tstyleUrl: './checkbox.component.css',\r\n})\r\nexport class CheckboxComponent {\r\n\t@ViewChild('input')\r\n\tpublic input!: ElementRef<HTMLInputElement>;\r\n\r\n\t@Output()\r\n\tpublic onCheck: EventEmitter<CheckboxCheckEvent> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onUncheck: EventEmitter<CheckboxUncheckEvent> = new EventEmitter();\r\n\r\n\t@HostBinding('class.selected')\r\n\t@Input('isSelected')\r\n\tpublic isSelected: boolean = false;\r\n\r\n\tpublic onClick(event: PointerEvent | MouseEvent) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// this.isSelected = !this.isSelected;\r\n\r\n\t\tconst payload: CheckboxCheckEvent | CheckboxUncheckEvent = { nativeEvent: event, ctrl: event.ctrlKey, shift: event.shiftKey, alt: event.altKey };\r\n\r\n\t\tif (!this.isSelected) {\r\n\t\t\tthis.onCheck.emit(payload);\r\n\t\t} else {\r\n\t\t\tthis.onUncheck.emit(payload);\r\n\t\t}\r\n\t}\r\n}\r\n",
            "styleUrl": "./checkbox.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<label>\r\n\t<input #input type=\"checkbox\" (click)=\"onClick($event)\" />\r\n\t<div class=\"wrapper\">\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n\t\t\t<path\r\n\t\t\t\td=\"m382-354 339-339q12-12 28-12t28 12q12 12 12 28.5T777-636L410-268q-12 12-28 12t-28-12L182-440q-12-12-11.5-28.5T183-497q12-12 28.5-12t28.5 12l142 143Z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t</div>\r\n</label>\r\n"
        },
        {
            "name": "ContentListComponent",
            "id": "component-ContentListComponent-1c56f0546c284ac9f7d0c6361b3ea6ded0eb099d5ef1d018c9a4c0ddb8a139ae61f25c32d305bde643b621ed4c22d9f22e117282309391863dc89843e210b765",
            "file": "src/app/features/content-list/content-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "content-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./content-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<ContentType>",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "content$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Array<ContentType>>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "isInSelectMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isInSelectMode$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ContentListService",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "ListItemSelectEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ListItemSelectEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onUnselect",
                    "args": [
                        {
                            "name": "event",
                            "type": "ListItemUnselectEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ListItemUnselectEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unselectAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PureContentListComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport {\r\n\tListItemSelectEvent,\r\n\tListItemUnselectEvent,\r\n} from 'src/app/features/content-list/components/pure-content-list/components/selectable-directory-list-item/selectable-directory-list-item.component';\r\nimport { ContentType, PureContentListComponent } from 'src/app/features/content-list/components/pure-content-list/pure-content-list.component';\r\nimport { ContentListService } from 'src/app/features/content-list/content-list.service';\r\n\r\n@Component({\r\n\tselector: 'content-list',\r\n\tstandalone: true,\r\n\ttemplateUrl: './content-list.component.html',\r\n\tstyleUrl: './content-list.component.css',\r\n\timports: [PureContentListComponent],\r\n})\r\nexport class ContentListComponent {\r\n\tprivate readonly service: ContentListService;\r\n\r\n\tprivate readonly content$: Observable<Array<ContentType>>;\r\n\r\n\tprivate readonly isInSelectMode$: Observable<boolean>;\r\n\r\n\tprivate readonly subscriptions: Subscription = new Subscription();\r\n\r\n\tpublic isInSelectMode: boolean = false;\r\n\r\n\tpublic content: Array<ContentType> = [];\r\n\r\n\tconstructor(service: ContentListService) {\r\n\t\tthis.service = service;\r\n\r\n\t\tthis.content$ = service.getContent();\r\n\t\tthis.isInSelectMode$ = service.isAtLeastOneSelected();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.subscriptions.add(\r\n\t\t\tthis.content$.subscribe((content) => {\r\n\t\t\t\tthis.content = content;\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tthis.subscriptions.add(\r\n\t\t\tthis.isInSelectMode$.subscribe((isInSelectMode) => {\r\n\t\t\t\tthis.isInSelectMode = isInSelectMode;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.subscriptions.unsubscribe();\r\n\t}\r\n\r\n\tonSelect(event: ListItemSelectEvent) {\r\n\t\tthis.service.select(event);\r\n\t}\r\n\r\n\tonUnselect(event: ListItemUnselectEvent) {\r\n\t\tthis.service.unselect(event);\r\n\t}\r\n\r\n\tselectAll() {\r\n\t\tthis.service.selectAll();\r\n\t}\r\n\r\n\tunselectAll() {\r\n\t\tthis.service.unselectAll();\r\n\t}\r\n}\r\n",
            "styleUrl": "./content-list.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ContentListService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ContentListService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<pure-content-list\r\n\t[content]=\"content\"\r\n\t[isInSelectMode]=\"isInSelectMode\"\r\n\t(onClickOutside)=\"unselectAll()\"\r\n\t(onSelectAll)=\"selectAll()\"\r\n\t(onUnselectAll)=\"unselectAll()\"\r\n\t(onSelect)=\"onSelect($event)\"\r\n\t(onUnselect)=\"onUnselect($event)\"\r\n></pure-content-list>\r\n"
        },
        {
            "name": "DirectoryListItemComponent",
            "id": "component-DirectoryListItemComponent-b586971e35ed78d8fae4c5b514fff1207f9f1a2a6ccd57296ab47416e372cd08c077267bd6fe49e9bda4a04ff0fc4f0dab4dc7b54033c73325aa2eb78de6967d",
            "file": "src/app/shared/components/directory-list-item/directory-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "directory-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./directory-list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 16,
                    "type": "DirectoryContentDirectory",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatBytes",
                    "args": [
                        {
                            "name": "bytes",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "bytes",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "dateOrString",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "dateOrString",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "rename",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unselect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\r\nimport { DirectoryContentDirectory } from 'generated';\r\nimport { IDeletable } from 'src/app/shared/models/IDeletable';\r\nimport { IDownloadable } from 'src/app/shared/models/IDownloadable';\r\nimport { IRenamable } from 'src/app/shared/models/IRenamable';\r\nimport { ISelectable } from 'src/app/shared/models/ISelectable';\r\n\r\n@Component({\r\n\tselector: 'directory-list-item',\r\n\tstandalone: true,\r\n\ttemplateUrl: './directory-list-item.component.html',\r\n\tstyleUrl: './directory-list-item.component.css',\r\n})\r\nexport class DirectoryListItemComponent implements ISelectable, IDownloadable, IRenamable, IDeletable {\r\n\t@Input({ required: true })\r\n\tpublic metadata!: DirectoryContentDirectory;\r\n\r\n\t@HostBinding('class.selected')\r\n\t@Input('isSelected')\r\n\tpublic isSelected: boolean = false;\r\n\r\n\tselect(): void {\r\n\t\tthis.isSelected = true;\r\n\t}\r\n\r\n\tunselect(): void {\r\n\t\tthis.isSelected = false;\r\n\t}\r\n\r\n\tpublic rename(event?: Event): void {\r\n\t\tevent?.preventDefault();\r\n\t}\r\n\r\n\tpublic delete(event?: Event): void {\r\n\t\tevent?.preventDefault();\r\n\t}\r\n\r\n\tpublic download(event?: Event): void {\r\n\t\tevent?.preventDefault();\r\n\t}\r\n\r\n\tprotected formatBytes(bytes: number, decimals: number = 2): string {\r\n\t\tif (!+bytes) return '0 B';\r\n\r\n\t\tconst k = 1024;\r\n\t\tconst dm = decimals < 0 ? 0 : decimals;\r\n\t\tconst sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n\t\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n\t\treturn `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\r\n\t}\r\n\r\n\tprotected formatDate(dateOrString: Date | string): string {\r\n\t\tconst date = dateOrString instanceof Date ? dateOrString : new Date(Date.parse(dateOrString));\r\n\r\n\t\tconst day = date.toLocaleDateString('de-DE', { day: 'numeric' });\r\n\t\tconst month = date.toLocaleDateString('de-DE', { month: 'short' });\r\n\t\tconst year = date.toLocaleDateString('de-DE', { year: '2-digit' });\r\n\r\n\t\treturn `${day} ${month} ${year}`;\r\n\t}\r\n}\r\n",
            "styleUrl": "./directory-list-item.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "ISelectable",
                "IDownloadable",
                "IRenamable",
                "IDeletable"
            ],
            "templateData": "<div class=\"icon\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 19\">\r\n\t    <path fill=\"rgb(255, 160, 0)\" d=\"M2 0 10 0 14 3 14 5 0 5 0 2C0 1 1 0 2 0\"/>\r\n\t    <path fill=\"rgb(255, 202, 40)\" d=\"M2 3 22 3C24 3 25 4 25 6L25 16C25 18 24 19 22 19L3 19C1 19 0 18 0 16L0 6C0 4 1 3 3 3\"/>\r\n    </svg>\r\n</div>\r\n<p class=\"name\">{{metadata.name}}</p>\r\n<p class=\"date\">{{formatDate(metadata.updatedAt)}}</p>\r\n<p class=\"size\">{{formatBytes(metadata.size)}}</p>\r\n<div class=\"actions\">\r\n        <svg (click)=\"rename($event)\" class=\"rename icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n            <path d=\"M200-200h57l391-391-57-57-391 391v57Zm-40 80q-17 0-28.5-11.5T120-160v-97q0-16 6-30.5t17-25.5l505-504q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L313-143q-11 11-25.5 17t-30.5 6h-97Zm600-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z\"/>\r\n        </svg>\r\n        <svg (click)=\"download($event)\" class=\"download icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n            <path d=\"M480-337q-8 0-15-2.5t-13-8.5L308-492q-12-12-11.5-28t11.5-28q12-12 28.5-12.5T365-549l75 75v-286q0-17 11.5-28.5T480-800q17 0 28.5 11.5T520-760v286l75-75q12-12 28.5-11.5T652-548q11 12 11.5 28T652-492L508-348q-6 6-13 8.5t-15 2.5ZM240-160q-33 0-56.5-23.5T160-240v-80q0-17 11.5-28.5T200-360q17 0 28.5 11.5T240-320v80h480v-80q0-17 11.5-28.5T760-360q17 0 28.5 11.5T800-320v80q0 33-23.5 56.5T720-160H240Z\"/>\r\n        </svg>\r\n        <svg (click)=\"delete($event)\" class=\"delete icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n            <path d=\"M280-120q-33 0-56.5-23.5T200-200v-520q-17 0-28.5-11.5T160-760q0-17 11.5-28.5T200-800h160q0-17 11.5-28.5T400-840h160q17 0 28.5 11.5T600-800h160q17 0 28.5 11.5T800-760q0 17-11.5 28.5T760-720v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM400-280q17 0 28.5-11.5T440-320v-280q0-17-11.5-28.5T400-640q-17 0-28.5 11.5T360-600v280q0 17 11.5 28.5T400-280Zm160 0q17 0 28.5-11.5T600-320v-280q0-17-11.5-28.5T560-640q-17 0-28.5 11.5T520-600v280q0 17 11.5 28.5T560-280ZM280-720v520-520Z\"/>\r\n        </svg>\r\n    <!-- <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"><path d=\"M240-400q-33 0-56.5-23.5T160-480q0-33 23.5-56.5T240-560q33 0 56.5 23.5T320-480q0 33-23.5 56.5T240-400Zm240 0q-33 0-56.5-23.5T400-480q0-33 23.5-56.5T480-560q33 0 56.5 23.5T560-480q0 33-23.5 56.5T480-400Zm240 0q-33 0-56.5-23.5T640-480q0-33 23.5-56.5T720-560q33 0 56.5 23.5T800-480q0 33-23.5 56.5T720-400Z\"/></svg> -->\r\n</div>"
        },
        {
            "name": "DirectoryTreeComponent",
            "id": "component-DirectoryTreeComponent-b1afe7b3c39df95250f51ad50f763066f11ac013209a6585702ef6688273b03ea92b00eec285d1dd64e848cf8448cd81e0d4c830e449f78d2e686ee00558d04e",
            "file": "src/app/features/directory-tree/directory-tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "directory-tree",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./directory-tree.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Node | Leaf",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "metadata$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Node | Leaf>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "rootPath",
                    "defaultValue": "'/root/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "store",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Store",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCollapse",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onExpand",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PureDirectoryTreeComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { PureDirectoryTreeComponent } from 'src/app/features/directory-tree/components/pure-directory-tree/pure-directory-tree.component';\r\nimport { DirectoryTreeActions } from 'src/app/features/directory-tree/state/directory-tree.actions';\r\nimport { Leaf, Node } from 'src/app/features/directory-tree/state/directory-tree.state';\r\n\r\n@Component({\r\n\tstandalone: true,\r\n\tselector: 'directory-tree',\r\n\tstyleUrl: './directory-tree.component.css',\r\n\ttemplateUrl: './directory-tree.component.html',\r\n\timports: [PureDirectoryTreeComponent],\r\n})\r\nexport class DirectoryTreeComponent {\r\n\tprivate readonly store: Store;\r\n\tpublic readonly rootPath = '/root/';\r\n\r\n\tprivate readonly metadata$: Observable<Node | Leaf>;\r\n\r\n\tprivate readonly subscriptions: Subscription = new Subscription();\r\n\r\n\tpublic metadata!: Node | Leaf;\r\n\r\n\tconstructor(store: Store) {\r\n\t\tthis.metadata$ = store.select((state) => state['directory_tree']);\r\n\t\tthis.store = store;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.subscriptions.add(\r\n\t\t\tthis.metadata$.subscribe((metadata) => {\r\n\t\t\t\tconsole.log('CHANGED');\r\n\t\t\t\tthis.metadata = metadata;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.subscriptions.unsubscribe();\r\n\t}\r\n\r\n\tpublic onClick(id: number) {\r\n\t\tthis.store.dispatch(new DirectoryTreeActions.Select(id));\r\n\t}\r\n\r\n\tpublic onExpand(id: number) {\r\n\t\tthis.store.dispatch(new DirectoryTreeActions.Expand(id));\r\n\t}\r\n\r\n\tpublic onCollapse(id: number) {\r\n\t\tthis.store.dispatch(new DirectoryTreeActions.Collapse(id));\r\n\t}\r\n}\r\n",
            "styleUrl": "./directory-tree.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<pure-directory-tree (onCollapse)=\"onCollapse($event)\" (onExpand)=\"onExpand($event)\" (onClick)=\"onClick($event)\" [metadata]=\"metadata\"></pure-directory-tree>\r\n"
        },
        {
            "name": "DirectoryTreeItemComponent",
            "id": "component-DirectoryTreeItemComponent-b7701abb01f9f979d48c50f0fe8a9a20a62fbd067b445a1ae895d10785a9366627a9b67afd4e0040d749a98562afadcef947f6e51b99f3c5432b22871c0371a2",
            "file": "src/app/features/directory-tree/components/pure-directory-tree/components/directory-tree-item/directory-tree-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "directory-tree-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./directory-tree-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "children",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "Array<Leaf | Node>",
                    "decorators": []
                },
                {
                    "name": "hasChildren",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "isCollapsed",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "onCollapse",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "onExpand",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "isLeaf",
                    "args": [
                        {
                            "name": "metadata",
                            "type": "Leaf | Node",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Leaf",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "metadata",
                            "type": "Leaf | Node",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onArrowClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent | PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent | PointerEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\r\nimport { Leaf, Node } from 'src/app/features/directory-tree/state/directory-tree.state';\r\n\r\n@Component({\r\n\tselector: 'directory-tree-item',\r\n\tstandalone: true,\r\n\ttemplateUrl: './directory-tree-item.component.html',\r\n\tstyleUrl: './directory-tree-item.component.css',\r\n})\r\nexport class DirectoryTreeItemComponent {\r\n\t@Input({ required: true })\r\n\tpublic id!: number;\r\n\r\n\t@Input({ required: true })\r\n\tpublic name!: string;\r\n\r\n\t@HostBinding('class.has-children')\r\n\t@Input()\r\n\tpublic hasChildren: boolean = false;\r\n\r\n\t@HostBinding('class.is-selected')\r\n\t@Input()\r\n\tpublic isSelected: boolean = false;\r\n\r\n\t@HostBinding('class.is-collapsed')\r\n\t@Input()\r\n\tpublic isCollapsed: boolean = true;\r\n\r\n\t@Input()\r\n\tpublic children: Array<Leaf | Node> = [];\r\n\r\n\t@Output()\r\n\tpublic onClick: EventEmitter<number> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onCollapse: EventEmitter<number> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onExpand: EventEmitter<number> = new EventEmitter();\r\n\r\n\tpublic isLeaf(metadata: Leaf | Node): metadata is Leaf {\r\n\t\treturn !('children' in metadata);\r\n\t}\r\n\r\n\tpublic onArrowClick(event: MouseEvent | PointerEvent) {\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tif (this.isCollapsed) {\r\n\t\t\tthis.onExpand.emit(this.id);\r\n\t\t} else {\r\n\t\t\tthis.onCollapse.emit(this.id);\r\n\t\t}\r\n\t}\r\n}\r\n",
            "styleUrl": "./directory-tree-item.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<header (click)=\"onClick.emit(id)\">\r\n\t<div class=\"arrow\">\r\n\t\t<svg (click)=\"onArrowClick($event)\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n\t\t\t<path\r\n\t\t\t\td=\"M 480 -321 q -8 0 -15 -2.5 t -13 -8.5 L 268 -516 q -11 -11 -11 -28 t 11 -28 q 11 -11 28 -11 t 28 11 l 156 156 l 156 -156 q 11 -11 28 -11 t 28 11 q 11 11 11 28 t -11 28 L 508 -332 q -6 6 -13 8.5 t -15 2.5 Z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t</div>\r\n\t<div class=\"icon\">\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 19\">\r\n\t\t\t<path fill=\"rgb(255, 160, 0)\" d=\"M2 0 10 0 14 3 14 5 0 5 0 2C0 1 1 0 2 0\" />\r\n\t\t\t<path fill=\"rgb(255, 202, 40)\" d=\"M2 3 22 3C24 3 25 4 25 6L25 16C25 18 24 19 22 19L3 19C1 19 0 18 0 16L0 6C0 4 1 3 3 3\" />\r\n\t\t</svg>\r\n\t</div>\r\n\t<p class=\"name\">{{ name }}</p>\r\n</header>\r\n<main>\r\n\t@for (item of children; track item.id) {\r\n\t\t@if (isLeaf(item)) {\r\n\t\t\t<directory-tree-item\r\n\t\t\t\t(onExpand)=\"onExpand.emit($event)\"\r\n\t\t\t\t(onCollapse)=\"onCollapse.emit($event)\"\r\n\t\t\t\t(onClick)=\"onClick.emit($event)\"\r\n\t\t\t\t[id]=\"item.id\"\r\n\t\t\t\t[name]=\"item.name\"\r\n\t\t\t\t[isSelected]=\"item.isSelected\"\r\n\t\t\t></directory-tree-item>\r\n\t\t} @else {\r\n\t\t\t<directory-tree-item\r\n\t\t\t\t(onExpand)=\"onExpand.emit($event)\"\r\n\t\t\t\t(onCollapse)=\"onCollapse.emit($event)\"\r\n\t\t\t\t(onClick)=\"onClick.emit($event)\"\r\n\t\t\t\t[id]=\"item.id\"\r\n\t\t\t\t[name]=\"item.name\"\r\n\t\t\t\t[isCollapsed]=\"item.isCollapsed\"\r\n\t\t\t\t[hasChildren]=\"item.hasChildren\"\r\n\t\t\t\t[children]=\"item.children\"\r\n\t\t\t\t[isSelected]=\"item.isSelected\"\r\n\t\t\t></directory-tree-item>\r\n\t\t}\r\n\t}\r\n</main>\r\n"
        },
        {
            "name": "ExpandingMenuButtonComponent",
            "id": "component-ExpandingMenuButtonComponent-de750fc079d4de7642911727814f0491657844d1158c6b44a6ee12900bbae3d0d4f0a3c1adf067cbf77e6925da2f25aa369c91cbf97b7d00add04189ed1837a3",
            "file": "src/app/shared/components/expanding-menu-button/expanding-menu-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "expanding-menu-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./expanding-menu-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "direction",
                    "defaultValue": "Direction.Down",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 452,
                            "end": 473,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 351,
                            "tagName": {
                                "pos": 453,
                                "end": 457,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "type"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 458,
                                "end": 469,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 459,
                                    "end": 468,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 459,
                                        "end": 468,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "Direction"
                                    }
                                }
                            }
                        }
                    ],
                    "rawdescription": "\n\nThe direction to which the menu will expand.\n",
                    "description": "<p>The direction to which the menu will expand.</p>\n",
                    "line": 22,
                    "type": "Direction",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\r\n\r\nexport enum Direction {\r\n\tUp = 'up',\r\n\tDown = 'down',\r\n\tLeft = 'left',\r\n\tRight = 'right',\r\n}\r\n\r\n@Component({\r\n\tselector: 'expanding-menu-button',\r\n\tstandalone: true,\r\n\ttemplateUrl: './expanding-menu-button.component.html',\r\n\tstyleUrl: './expanding-menu-button.component.css',\r\n})\r\nexport class ExpandingMenuButtonComponent {\r\n\t/**\r\n\t * The direction to which the menu will expand.\r\n\t * @type {Direction}\r\n\t */\r\n\t@Input()\r\n\tpublic direction: Direction = Direction.Down;\r\n\r\n\t@HostBinding('class')\r\n\tget classList(): string {\r\n\t\treturn this.direction.toString();\r\n\t}\r\n}\r\n",
            "styleUrl": "./expanding-menu-button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classList": {
                    "name": "classList",
                    "getSignature": {
                        "name": "classList",
                        "type": "string",
                        "returnType": "string",
                        "line": 25
                    }
                }
            },
            "templateData": "<div class=\"wrapper\">\r\n    <div class=\"items\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n    <div class=\"plus\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\">\r\n            <path fill=\"white\" d=\"M440-440H240q-17 0-28.5-11.5T200-480q0-17 11.5-28.5T240-520h200v-200q0-17 11.5-28.5T480-760q17 0 28.5 11.5T520-720v200h200q17 0 28.5 11.5T760-480q0 17-11.5 28.5T720-440H520v200q0 17-11.5 28.5T480-200q-17 0-28.5-11.5T440-240v-200Z\"/>\r\n        </svg>\r\n    </div>\r\n</div>"
        },
        {
            "name": "FileListItemComponent",
            "id": "component-FileListItemComponent-87df1a2ac5539894db7bef8e1955dd6eea12777ddecbb2316dc5d9658b7ede7aeae28e177920c7805f9f82e1dba2cd1f770296292ed0cc3c5fe23b773efbfd3e",
            "file": "src/app/shared/components/file-list-item/file-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "file-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./file-list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 16,
                    "type": "DirectoryContentFile",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatBytes",
                    "args": [
                        {
                            "name": "bytes",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "bytes",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "decimals",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "dateOrString",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "dateOrString",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "rename",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "unselect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostBinding, Input } from '@angular/core';\r\nimport { DirectoryContentFile } from 'generated';\r\nimport { IDeletable } from 'src/app/shared/models/IDeletable';\r\nimport { IDownloadable } from 'src/app/shared/models/IDownloadable';\r\nimport { IRenamable } from 'src/app/shared/models/IRenamable';\r\nimport { ISelectable } from 'src/app/shared/models/ISelectable';\r\n\r\n@Component({\r\n\tselector: 'file-list-item',\r\n\tstandalone: true,\r\n\ttemplateUrl: './file-list-item.component.html',\r\n\tstyleUrl: './file-list-item.component.css',\r\n})\r\nexport class FileListItemComponent implements ISelectable, IDownloadable, IRenamable, IDeletable {\r\n\t@Input({ required: true })\r\n\tpublic metadata!: DirectoryContentFile;\r\n\r\n\t@HostBinding('class.selected')\r\n\t@Input('isSelected')\r\n\tpublic isSelected: boolean = false;\r\n\r\n\tselect(): void {\r\n\t\tthis.isSelected = true;\r\n\t}\r\n\r\n\tunselect(): void {\r\n\t\tthis.isSelected = false;\r\n\t}\r\n\r\n\tpublic rename(event?: Event): void {\r\n\t\tevent?.preventDefault();\r\n\t}\r\n\r\n\tpublic delete(event?: Event): void {\r\n\t\tevent?.preventDefault();\r\n\t}\r\n\r\n\tpublic download(event?: Event): void {\r\n\t\tevent?.preventDefault();\r\n\t}\r\n\r\n\tprotected formatBytes(bytes: number, decimals: number = 2): string {\r\n\t\tif (!+bytes) return '0 B';\r\n\r\n\t\tconst k = 1024;\r\n\t\tconst dm = decimals < 0 ? 0 : decimals;\r\n\t\tconst sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n\t\tconst i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n\t\treturn `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\r\n\t}\r\n\r\n\tprotected formatDate(dateOrString: Date | string): string {\r\n\t\tconst date = dateOrString instanceof Date ? dateOrString : new Date(Date.parse(dateOrString));\r\n\r\n\t\tconst day = date.toLocaleDateString('de-DE', { day: 'numeric' });\r\n\t\tconst month = date.toLocaleDateString('de-DE', { month: 'short' });\r\n\t\tconst year = date.toLocaleDateString('de-DE', { year: '2-digit' });\r\n\r\n\t\treturn `${day} ${month} ${year}`;\r\n\t}\r\n}\r\n",
            "styleUrl": "./file-list-item.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "ISelectable",
                "IDownloadable",
                "IRenamable",
                "IDeletable"
            ],
            "templateData": "<div class=\"icon\">\r\n    <svg class=\"folder-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19 22\">\r\n        <path fill=\"rgb(57, 97, 237)\" d=\"M2 0 11 0 11 1 18 8 19 8 19 18C19 20 17 22 15 22L4 22C2 22 0 20 0 18L0 4C0 2 2 0 4 0\"></path>\r\n        <path fill=\"rgb(106,136,242)\" d=\"M11 0 19 8 13 8C12 8 11 7 11 6Z\"></path>\r\n    </svg>\r\n</div>\r\n<p class=\"name\">{{metadata.name}}</p>\r\n<p class=\"date\">{{formatDate(metadata.updatedAt)}}</p>\r\n<p class=\"mime-type\">{{metadata.mimeType}}</p>\r\n<p class=\"size\">{{formatBytes(metadata.size)}}</p>\r\n<div class=\"actions\">\r\n        <svg (click)=\"rename($event)\" class=\"rename icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n            <path d=\"M200-200h57l391-391-57-57-391 391v57Zm-40 80q-17 0-28.5-11.5T120-160v-97q0-16 6-30.5t17-25.5l505-504q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L313-143q-11 11-25.5 17t-30.5 6h-97Zm600-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z\"/>\r\n        </svg>\r\n        <svg (click)=\"download($event)\" class=\"download icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n            <path d=\"M480-337q-8 0-15-2.5t-13-8.5L308-492q-12-12-11.5-28t11.5-28q12-12 28.5-12.5T365-549l75 75v-286q0-17 11.5-28.5T480-800q17 0 28.5 11.5T520-760v286l75-75q12-12 28.5-11.5T652-548q11 12 11.5 28T652-492L508-348q-6 6-13 8.5t-15 2.5ZM240-160q-33 0-56.5-23.5T160-240v-80q0-17 11.5-28.5T200-360q17 0 28.5 11.5T240-320v80h480v-80q0-17 11.5-28.5T760-360q17 0 28.5 11.5T800-320v80q0 33-23.5 56.5T720-160H240Z\"/>\r\n        </svg>\r\n        <svg (click)=\"delete($event)\" class=\"delete icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n            <path d=\"M280-120q-33 0-56.5-23.5T200-200v-520q-17 0-28.5-11.5T160-760q0-17 11.5-28.5T200-800h160q0-17 11.5-28.5T400-840h160q17 0 28.5 11.5T600-800h160q17 0 28.5 11.5T800-760q0 17-11.5 28.5T760-720v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM400-280q17 0 28.5-11.5T440-320v-280q0-17-11.5-28.5T400-640q-17 0-28.5 11.5T360-600v280q0 17 11.5 28.5T400-280Zm160 0q17 0 28.5-11.5T600-320v-280q0-17-11.5-28.5T560-640q-17 0-28.5 11.5T520-600v280q0 17 11.5 28.5T560-280ZM280-720v520-520Z\"/>\r\n        </svg>\r\n    <!-- <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"><path d=\"M240-400q-33 0-56.5-23.5T160-480q0-33 23.5-56.5T240-560q33 0 56.5 23.5T320-480q0 33-23.5 56.5T240-400Zm240 0q-33 0-56.5-23.5T400-480q0-33 23.5-56.5T480-560q33 0 56.5 23.5T560-480q0 33-23.5 56.5T480-400Zm240 0q-33 0-56.5-23.5T640-480q0-33 23.5-56.5T720-560q33 0 56.5 23.5T800-480q0 33-23.5 56.5T720-400Z\"/></svg> -->\r\n</div>"
        },
        {
            "name": "LoadingSpinnerComponent",
            "id": "component-LoadingSpinnerComponent-b41ec6c1e486cbf0b76f6c7d59a4d6f966fbde81445b59bac5344697542217488d9fdbcc9c213307975fe262d03ea4d0b22eb45be5ec47c0782500b3e8c99321",
            "file": "src/app/shared/components/loading-spinner/loading-spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "loading-spinner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./loading-spinner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "thickness",
                    "defaultValue": "Thickness.Regular",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 653,
                            "end": 674,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 351,
                            "tagName": {
                                "pos": 654,
                                "end": 658,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "type"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 659,
                                "end": 670,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 660,
                                    "end": 669,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 660,
                                        "end": 669,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "Thickness"
                                    }
                                }
                            }
                        }
                    ],
                    "rawdescription": "\n\nThe thickness of the spinner.\n",
                    "description": "<p>The thickness of the spinner.</p>\n",
                    "line": 32,
                    "type": "Thickness",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "Type.Rounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 782,
                            "end": 798,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 351,
                            "tagName": {
                                "pos": 783,
                                "end": 787,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "type"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 788,
                                "end": 794,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 789,
                                    "end": 793,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 789,
                                        "end": 793,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "Type"
                                    }
                                }
                            }
                        }
                    ],
                    "rawdescription": "\n\nThe type of the spinner.\n",
                    "description": "<p>The type of the spinner.</p>\n",
                    "line": 39,
                    "type": "Type",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "calculatedThickness",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Host binding for setting the thickness variable for CSS use.</p>\n",
                    "line": 52,
                    "rawdescription": "\n\nHost binding for setting the thickness variable for CSS use.\n",
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.--thickness'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ],
                    "jsdoctags": [
                        {
                            "pos": 1073,
                            "end": 1091,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 351,
                            "tagName": {
                                "pos": 1074,
                                "end": 1078,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "type"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 1079,
                                "end": 1087,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1080,
                                    "end": 1086,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "hostRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": false,
                    "description": "<p>Reference to the host element.</p>\n",
                    "line": 45,
                    "rawdescription": "\n\nReference to the host element.\n",
                    "modifierKind": [
                        123,
                        148
                    ],
                    "jsdoctags": [
                        {
                            "pos": 897,
                            "end": 935,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 351,
                            "tagName": {
                                "pos": 898,
                                "end": 902,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "type"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 903,
                                "end": 931,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 904,
                                    "end": 930,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 183,
                                    "typeName": {
                                        "pos": 904,
                                        "end": 914,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 80,
                                        "escapedText": "ElementRef"
                                    },
                                    "typeArguments": [
                                        {
                                            "pos": 915,
                                            "end": 929,
                                            "flags": 16777216,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 1,
                                            "kind": 183,
                                            "typeName": {
                                                "pos": 915,
                                                "end": 929,
                                                "flags": 16777216,
                                                "modifierFlagsCache": 0,
                                                "transformFlags": 0,
                                                "kind": 80,
                                                "escapedText": "HTMLDivElement"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyThickness",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the thickness, format for CSS and assign to host binding.\n",
                    "description": "<p>Calculate the thickness, format for CSS and assign to host binding.</p>\n",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "calculateThickness",
                    "args": [
                        {
                            "name": "width",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalculate the thickness of the spinner based off its computed width.\n\n",
                    "description": "<p>Calculate the thickness of the spinner based off its computed width.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1926,
                                "end": 1931,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "width"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1909,
                                "end": 1914,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>the width of the component</p>\n",
                            "typeExpression": {
                                "pos": 1917,
                                "end": 1925,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1918,
                                    "end": 1924,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 150
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1965,
                                "end": 1972,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>the calculated thickness</p>\n",
                            "returnType": "number"
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style.--thickness",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1073,
                            "end": 1091,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 351,
                            "tagName": {
                                "pos": 1074,
                                "end": 1078,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "type"
                            },
                            "comment": "",
                            "typeExpression": {
                                "pos": 1079,
                                "end": 1087,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 316,
                                "type": {
                                    "pos": 1080,
                                    "end": 1086,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 154
                                }
                            }
                        }
                    ],
                    "rawdescription": "\n\nHost binding for setting the thickness variable for CSS use.\n",
                    "description": "<p>Host binding for setting the thickness variable for CSS use.</p>\n",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79
                }
            ],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\r\n\r\nexport enum Type {\r\n\tMinimalistic = 'minimalistic',\r\n\tRounded = 'rounded',\r\n}\r\n\r\nexport enum Thickness {\r\n\tThick = 'thick',\r\n\tRegular = 'regular',\r\n\tThin = 'thin',\r\n}\r\n\r\nconst ThicknessMap: Record<Thickness, number> = {\r\n\t[Thickness.Thick]: 0.16,\r\n\t[Thickness.Regular]: 0.08,\r\n\t[Thickness.Thin]: 0.04,\r\n};\r\n\r\n@Component({\r\n\tselector: 'loading-spinner',\r\n\tstandalone: true,\r\n\ttemplateUrl: './loading-spinner.component.html',\r\n\tstyleUrl: './loading-spinner.component.css',\r\n})\r\nexport class LoadingSpinnerComponent {\r\n\t/**\r\n\t * The thickness of the spinner.\r\n\t * @type {Thickness}\r\n\t */\r\n\t@Input()\r\n\tpublic thickness: Thickness = Thickness.Regular;\r\n\r\n\t/**\r\n\t * The type of the spinner.\r\n\t * @type {Type}\r\n\t */\r\n\t@Input()\r\n\tpublic type: Type = Type.Rounded;\r\n\r\n\t/**\r\n\t * Reference to the host element.\r\n\t * @type {ElementRef<HTMLDivElement>}\r\n\t */\r\n\tprivate readonly hostRef: ElementRef<HTMLDivElement>;\r\n\r\n\t/**\r\n\t * Host binding for setting the thickness variable for CSS use.\r\n\t * @type {string}\r\n\t */\r\n\t@HostBinding('style.--thickness')\r\n\tprivate calculatedThickness!: string;\r\n\r\n\t/**\r\n\t * Creates a new LoadingSpinnerComponent instance.\r\n\t * @constructor\r\n\t *\r\n\t * @param   {ElementRef}              hostRef the entityManager\r\n\t * @returns {LoadingSpinnerComponent}         the LoadingSpinnerComponent instance\r\n\t */\r\n\tpublic constructor(hostRef: ElementRef) {\r\n\t\tthis.hostRef = hostRef;\r\n\t}\r\n\r\n\tpublic ngAfterViewInit() {\r\n\t\tthis.applyThickness();\r\n\t}\r\n\r\n\tpublic ngOnChanges() {\r\n\t\tthis.applyThickness();\r\n\t}\r\n\r\n\t@HostBinding('class')\r\n\tget classList(): string {\r\n\t\treturn `${this.thickness.toString()} ${this.type.toString()}`;\r\n\t}\r\n\r\n\t@HostListener('window:resize')\r\n\tprivate onResize() {\r\n\t\tthis.applyThickness();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate the thickness of the spinner based off its computed width.\r\n\t *\r\n\t * @param   {number} width the width of the component\r\n\t * @returns {number}       the calculated thickness\r\n\t */\r\n\tprivate calculateThickness(width: number) {\r\n\t\treturn width * ThicknessMap[this.thickness];\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate the thickness, format for CSS and assign to host binding.\r\n\t */\r\n\tprivate applyThickness() {\r\n\t\tthis.calculatedThickness = `${this.calculateThickness(this.hostRef.nativeElement.clientWidth)}px`;\r\n\t}\r\n}\r\n",
            "styleUrl": "./loading-spinner.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Creates a new LoadingSpinnerComponent instance.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "hostRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "rawdescription": "\n\nCreates a new LoadingSpinnerComponent instance.\n\n",
                "modifierKind": [
                    125
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1294,
                            "end": 1301,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "hostRef"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1260,
                            "end": 1265,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "param"
                        },
                        "comment": "<p>the entityManager</p>\n",
                        "typeExpression": {
                            "pos": 1268,
                            "end": 1280,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 316,
                            "type": {
                                "pos": 1269,
                                "end": 1279,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 183,
                                "typeName": {
                                    "pos": 1269,
                                    "end": 1279,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 80,
                                    "escapedText": "ElementRef"
                                }
                            }
                        }
                    },
                    {
                        "tagName": {
                            "pos": 1326,
                            "end": 1333,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 80,
                            "escapedText": "returns"
                        },
                        "comment": "<p>the LoadingSpinnerComponent instance</p>\n",
                        "returnType": ""
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "classList": {
                    "name": "classList",
                    "getSignature": {
                        "name": "classList",
                        "type": "string",
                        "returnType": "string",
                        "line": 74
                    }
                }
            },
            "templateData": "<div class=\"wrapper\">\r\n    <div class=\"loading-spinner\"></div>\r\n</div>"
        },
        {
            "name": "PureContentListComponent",
            "id": "component-PureContentListComponent-e5fcd9264bdc8a472726053d9dc2f212e068b3e5c4b92a182839a8b4cb9164fdd43759fb5c837b8cdd9c80d5d927819a45185774d9900475c678e3d2f6cf16ea",
            "file": "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pure-content-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pure-content-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 44,
                    "type": "Array<ContentType>",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "isInSelectMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickOutside",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter<ListItemSelectEvent>"
                },
                {
                    "name": "onSelectAll",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "onUnselect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "EventEmitter<ListItemUnselectEvent>"
                },
                {
                    "name": "onUnselectAll",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clickOut",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isFile",
                    "args": [
                        {
                            "name": "content",
                            "type": "ContentType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "File",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "content",
                            "type": "ContentType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "SelectableDirectoryListItemComponent",
                    "type": "component"
                },
                {
                    "name": "SelectableFileListItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\r\nimport { DirectoryContentDirectory, DirectoryContentFile } from 'generated';\r\nimport { SelectableFileListItemComponent } from 'src/app/features/content-list/components/pure-content-list/components/selectable-file-list-item/selectable-file-list-item.component';\r\nimport {\r\n\tListItemSelectEvent,\r\n\tListItemUnselectEvent,\r\n\tSelectableDirectoryListItemComponent,\r\n} from './components/selectable-directory-list-item/selectable-directory-list-item.component';\r\n\r\nexport enum Type {\r\n\tDirectory,\r\n\tFile,\r\n}\r\n\r\nexport type Directory = DirectoryContentDirectory & {\r\n\ttype: Type.Directory;\r\n\tid: number;\r\n\tisSelected: boolean;\r\n};\r\n\r\nexport type File = DirectoryContentFile & {\r\n\ttype: Type.File;\r\n\tid: number;\r\n\tisSelected: boolean;\r\n};\r\n\r\nexport type ContentType = File | Directory;\r\n\r\n@Component({\r\n\tselector: 'pure-content-list',\r\n\tstandalone: true,\r\n\ttemplateUrl: './pure-content-list.component.html',\r\n\tstyleUrl: './pure-content-list.component.css',\r\n\timports: [SelectableDirectoryListItemComponent, SelectableFileListItemComponent],\r\n})\r\nexport class PureContentListComponent {\r\n\tprivate ref: ElementRef;\r\n\r\n\t@HostBinding('class.in-select-mode')\r\n\t@Input({ alias: 'isInSelectMode', required: true })\r\n\tpublic isInSelectMode!: boolean;\r\n\r\n\t@Input({ required: true })\r\n\tpublic content!: Array<ContentType>;\r\n\r\n\t@Output()\r\n\tpublic onSelect: EventEmitter<ListItemSelectEvent> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onUnselect: EventEmitter<ListItemUnselectEvent> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onClickOutside: EventEmitter<void> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onSelectAll: EventEmitter<void> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onUnselectAll: EventEmitter<void> = new EventEmitter();\r\n\r\n\tconstructor(ref: ElementRef) {\r\n\t\tthis.ref = ref;\r\n\t}\r\n\r\n\t@HostListener('document:click', ['$event'])\r\n\tpublic clickOut(event: Event) {\r\n\t\tif (!this.ref.nativeElement.contains(event.target)) {\r\n\t\t\tthis.onClickOutside.emit();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isFile(content: ContentType): content is File {\r\n\t\treturn content.type === Type.File;\r\n\t}\r\n}\r\n",
            "styleUrl": "./pure-content-list.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 59,
                "jsdoctags": [
                    {
                        "name": "ref",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"items\">\r\n\t@for (item of content; track item.name) {\r\n\t\t@if (isFile(item)) {\r\n\t\t\t<selectable-file-list-item\r\n\t\t\t\tclass=\"selectable-list-item\"\r\n\t\t\t\t(onSelect)=\"this.onSelect.emit($event)\"\r\n\t\t\t\t(onUnselect)=\"this.onUnselect.emit($event)\"\r\n\t\t\t\t[id]=\"$index\"\r\n\t\t\t\t[metadata]=\"item\"\r\n\t\t\t\t[isSelectable]=\"this.isInSelectMode\"\r\n\t\t\t\t[isSelected]=\"item.isSelected\"\r\n\t\t\t></selectable-file-list-item>\r\n\t\t} @else {\r\n\t\t\t<selectable-directory-list-item\r\n\t\t\t\tclass=\"selectable-list-item\"\r\n\t\t\t\t(onSelect)=\"this.onSelect.emit($event)\"\r\n\t\t\t\t(onUnselect)=\"this.onUnselect.emit($event)\"\r\n\t\t\t\t[id]=\"$index\"\r\n\t\t\t\t[metadata]=\"item\"\r\n\t\t\t\t[isSelectable]=\"this.isInSelectMode\"\r\n\t\t\t\t[isSelected]=\"item.isSelected\"\r\n\t\t\t></selectable-directory-list-item>\r\n\t\t}\r\n\t}\r\n</div>\r\n<div class=\"action-trigger\">\r\n\t<svg class=\"arrow\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n\t\t<path\r\n\t\t\td=\"M480-361q-8 0-15-2.5t-13-8.5L268-556q-11-11-11-28t11-28q11-11 28-11t28 11l156 156 156-156q11-11 28-11t28 11q11 11 11 28t-11 28L508-372q-6 6-13 8.5t-15 2.5Z\"\r\n\t\t/>\r\n\t</svg>\r\n</div>\r\n<div class=\"actions\">\r\n\t<div (click)=\"onSelectAll.emit()\" class=\"action select-all\">\r\n\t\t<svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n\t\t\t<path\r\n\t\t\t\td=\"M70-438q-12-12-11.5-28T71-494q12-11 28-11.5t28 11.5l142 142 14 14 14 14q12 12 11.5 28T296-268q-12 11-28 11.5T240-268L70-438Zm424 85 340-340q12-12 28-11.5t28 12.5q11 12 11.5 28T890-636L522-268q-12 12-28 12t-28-12L296-438q-11-11-11-27.5t11-28.5q12-12 28.5-12t28.5 12l141 141Zm169-282L522-494q-11 11-27.5 11T466-494q-12-12-12-28.5t12-28.5l141-141q11-11 27.5-11t28.5 11q12 12 12 28.5T663-635Z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t</div>\r\n\t<div (click)=\"onUnselectAll.emit()\" class=\"action unselect-all\">\r\n\t\t<svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n\t\t\t<path\r\n\t\t\t\td=\"M845-116 609-352l-86 86q-12 12-28 12t-28-12L297-436q-12-12-11.5-28t11.5-28q12-12 28.5-12.5T354-493l141 141 56-56-386-386q-12-12-11.5-28t11.5-28q12-12 28.5-12.5T222-851l679 679q11 11 11 28t-11 28q-11 11-28 11t-28-11ZM241-266 71-436q-11-11-11-28t11-28q11-11 28-11t28 11l142 142 56 56-28 28q-12 12-28 12t-28-12Zm480-198-56-56 169-169q11-11 27-11.5t28 10.5q12 11 12.5 28T890-633L721-464ZM607-578l-56-56 58-58q11-11 28-11t28 11q11 11 11 28t-11 28l-58 58Z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t</div>\r\n\t<div class=\"action download\">\r\n\t\t<svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n\t\t\t<path\r\n\t\t\t\td=\"M480-337q-8 0-15-2.5t-13-8.5L308-492q-12-12-11.5-28t11.5-28q12-12 28.5-12.5T365-549l75 75v-286q0-17 11.5-28.5T480-800q17 0 28.5 11.5T520-760v286l75-75q12-12 28.5-11.5T652-548q11 12 11.5 28T652-492L508-348q-6 6-13 8.5t-15 2.5ZM240-160q-33 0-56.5-23.5T160-240v-80q0-17 11.5-28.5T200-360q17 0 28.5 11.5T240-320v80h480v-80q0-17 11.5-28.5T760-360q17 0 28.5 11.5T800-320v80q0 33-23.5 56.5T720-160H240Z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t</div>\r\n\t<div class=\"action delete\">\r\n\t\t<svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\">\r\n\t\t\t<path\r\n\t\t\t\td=\"M280-120q-33 0-56.5-23.5T200-200v-520q-17 0-28.5-11.5T160-760q0-17 11.5-28.5T200-800h160q0-17 11.5-28.5T400-840h160q17 0 28.5 11.5T600-800h160q17 0 28.5 11.5T800-760q0 17-11.5 28.5T760-720v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM400-280q17 0 28.5-11.5T440-320v-280q0-17-11.5-28.5T400-640q-17 0-28.5 11.5T360-600v280q0 17 11.5 28.5T400-280Zm160 0q17 0 28.5-11.5T600-320v-280q0-17-11.5-28.5T560-640q-17 0-28.5 11.5T520-600v280q0 17 11.5 28.5T560-280ZM280-720v520-520Z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t</div>\r\n</div>\r\n"
        },
        {
            "name": "PureDirectoryTreeComponent",
            "id": "component-PureDirectoryTreeComponent-9a974c6b19d2f390514802e812e9de8e272d45caf043f7ec755b9d278254b26eaf502ebcacd14ed612b7558c28b5e7a2043727cf5592974dab7c2fda0eddc435",
            "file": "src/app/features/directory-tree/components/pure-directory-tree/pure-directory-tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pure-directory-tree",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pure-directory-tree.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 14,
                    "type": "Node | Leaf",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "onCollapse",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<number>"
                },
                {
                    "name": "onExpand",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "isLeaf",
                    "args": [
                        {
                            "name": "metadata",
                            "type": "Leaf | Node",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Leaf",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "metadata",
                            "type": "Leaf | Node",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DirectoryTreeItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { DirectoryTreeItemComponent } from 'src/app/features/directory-tree/components/pure-directory-tree/components/directory-tree-item/directory-tree-item.component';\r\nimport { Leaf, Node } from 'src/app/features/directory-tree/state/directory-tree.state';\r\n\r\n@Component({\r\n\tstandalone: true,\r\n\tselector: 'pure-directory-tree',\r\n\ttemplateUrl: './pure-directory-tree.component.html',\r\n\tstyleUrl: './pure-directory-tree.component.css',\r\n\timports: [DirectoryTreeItemComponent],\r\n})\r\nexport class PureDirectoryTreeComponent {\r\n\t@Input({ required: true })\r\n\tpublic metadata!: Node | Leaf;\r\n\r\n\t@Output()\r\n\tpublic onClick: EventEmitter<number> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onExpand: EventEmitter<number> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onCollapse: EventEmitter<number> = new EventEmitter();\r\n\r\n\tpublic isLeaf(metadata: Leaf | Node): metadata is Leaf {\r\n\t\treturn !('children' in metadata);\r\n\t}\r\n\r\n\tngOnChange() {\r\n\t\tconsole.log('CHANGFED HERE');\r\n\t}\r\n}\r\n",
            "styleUrl": "./pure-directory-tree.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (!isLeaf(metadata)) {\r\n\t@for (item of metadata.children; track item.id) {\r\n\t\t@if (isLeaf(item)) {\r\n\t\t\t<directory-tree-item\r\n\t\t\t\t(onExpand)=\"onExpand.emit($event)\"\r\n\t\t\t\t(onCollapse)=\"onCollapse.emit($event)\"\r\n\t\t\t\t(onClick)=\"onClick.emit($event)\"\r\n\t\t\t\t[id]=\"item.id\"\r\n\t\t\t\t[name]=\"item.name\"\r\n\t\t\t\t[isSelected]=\"item.isSelected\"\r\n\t\t\t></directory-tree-item>\r\n\t\t} @else {\r\n\t\t\t<directory-tree-item\r\n\t\t\t\t(onExpand)=\"onExpand.emit($event)\"\r\n\t\t\t\t(onCollapse)=\"onCollapse.emit($event)\"\r\n\t\t\t\t(onClick)=\"onClick.emit($event)\"\r\n\t\t\t\t[id]=\"item.id\"\r\n\t\t\t\t[name]=\"item.name\"\r\n\t\t\t\t[isCollapsed]=\"item.isCollapsed\"\r\n\t\t\t\t[hasChildren]=\"item.hasChildren\"\r\n\t\t\t\t[isSelected]=\"item.isSelected\"\r\n\t\t\t\t[children]=\"item.children\"\r\n\t\t\t></directory-tree-item>\r\n\t\t}\r\n\t}\r\n}\r\n"
        },
        {
            "name": "SelectableDirectoryListItemComponent",
            "id": "component-SelectableDirectoryListItemComponent-0a347de7c584f6619e31fac397cf582d3f1419ca5b0a776d336fd754ad8f1044c2efe9fbbc8a3ec3d820cc9581204223d24a53b9dfe3da3ea3dea8bb4c836888",
            "file": "src/app/features/content-list/components/pure-content-list/components/selectable-directory-list-item/selectable-directory-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "selectable-directory-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./selectable-directory-list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 56,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "isSelectable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 59,
                    "type": "DirectoryContentDirectory",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter<ListItemSelectEvent>"
                },
                {
                    "name": "onUnselect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "EventEmitter<ListItemUnselectEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onCheck",
                    "args": [
                        {
                            "name": "event",
                            "type": "CheckboxCheckEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CheckboxCheckEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onUncheck",
                    "args": [
                        {
                            "name": "event",
                            "type": "CheckboxUncheckEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CheckboxUncheckEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DirectoryListItemComponent",
                    "type": "component"
                },
                {
                    "name": "CheckboxComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { animate, group, query, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\r\nimport { DirectoryContentDirectory } from 'generated';\r\nimport { CheckboxCheckEvent, CheckboxComponent, CheckboxUncheckEvent } from 'src/app/shared/components/checkbox/checkbox.component';\r\nimport { DirectoryListItemComponent } from 'src/app/shared/components/directory-list-item/directory-list-item.component';\r\n\r\nexport type ListItemSelectEvent = CheckboxCheckEvent & {\r\n\tid: number;\r\n};\r\n\r\nexport type ListItemUnselectEvent = CheckboxUncheckEvent & {\r\n\tid: number;\r\n};\r\n\r\n@Component({\r\n\tstandalone: true,\r\n\tselector: 'selectable-directory-list-item',\r\n\ttemplateUrl: './selectable-directory-list-item.component.html',\r\n\tstyleUrl: './selectable-directory-list-item.component.css',\r\n\timports: [DirectoryListItemComponent, CheckboxComponent],\r\n\tanimations: [\r\n\t\ttrigger('isSelectable', [\r\n\t\t\tstate('true', style({})),\r\n\t\t\tstate('false', style({})),\r\n\t\t\ttransition('false => true', [\r\n\t\t\t\tquery('checkbox', [\r\n\t\t\t\t\tstyle({\r\n\t\t\t\t\t\tmarginLeft: '-2rem',\r\n\t\t\t\t\t\topacity: 0,\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tgroup([animate('0.25s ease-out', style({ opacity: 1 })), animate('0.3s ease', style({ marginLeft: 0 }))]),\r\n\t\t\t\t]),\r\n\t\t\t]),\r\n\t\t\ttransition('true => false', [\r\n\t\t\t\tquery('checkbox', [\r\n\t\t\t\t\tstyle({\r\n\t\t\t\t\t\tmarginLeft: 0,\r\n\t\t\t\t\t\topacity: 1,\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tgroup([animate('0.25s 0.05s ease', style({ opacity: 0 })), animate('0.3s ease', style({ marginLeft: '-2rem' }))]),\r\n\t\t\t\t]),\r\n\t\t\t]),\r\n\t\t]),\r\n\t],\r\n})\r\nexport class SelectableDirectoryListItemComponent {\r\n\t@HostBinding('class.selected')\r\n\t@Input('isSelected')\r\n\tpublic isSelected: boolean = false;\r\n\r\n\t@HostBinding('class.selectable')\r\n\t@Input('isSelectable')\r\n\tpublic isSelectable: boolean = false;\r\n\r\n\t@Input({ required: true })\r\n\tpublic id!: number;\r\n\r\n\t@Input({ required: true })\r\n\tpublic metadata!: DirectoryContentDirectory;\r\n\r\n\t@Output()\r\n\tpublic onSelect: EventEmitter<ListItemSelectEvent> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onUnselect: EventEmitter<ListItemUnselectEvent> = new EventEmitter();\r\n\r\n\tpublic onCheck(event: CheckboxCheckEvent) {\r\n\t\tthis.onSelect.emit({ id: this.id, ...event });\r\n\t}\r\n\r\n\tpublic onUncheck(event: CheckboxUncheckEvent) {\r\n\t\tthis.onUnselect.emit({ id: this.id, ...event });\r\n\t}\r\n}\r\n",
            "styleUrl": "./selectable-directory-list-item.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<label [@isSelectable]=\"this.isSelectable\">\r\n\t<checkbox [isSelected]=\"this.isSelected\" (onCheck)=\"this.onCheck($event)\" (onUncheck)=\"this.onUncheck($event)\"></checkbox>\r\n\t<directory-list-item [isSelected]=\"this.isSelected\" [metadata]=\"this.metadata\"></directory-list-item>\r\n</label>\r\n"
        },
        {
            "name": "SelectableFileListItemComponent",
            "id": "component-SelectableFileListItemComponent-ea8c1fa2c97eb264fbe02358f4f6ed8fad4fff6b4c837f87a241265822bc1b72a4227f6f13e22cdabe3f520af558d213a4ba9875fe4d9b433b3e7e79400e2631",
            "file": "src/app/features/content-list/components/pure-content-list/components/selectable-file-list-item/selectable-file-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "selectable-file-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./selectable-file-list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 52,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "isSelectable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "metadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 55,
                    "type": "DirectoryContentFile",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "EventEmitter<ListItemSelectEvent>"
                },
                {
                    "name": "onUnselect",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter<ListItemUnselectEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onCheck",
                    "args": [
                        {
                            "name": "event",
                            "type": "CheckboxCheckEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CheckboxCheckEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onUncheck",
                    "args": [
                        {
                            "name": "event",
                            "type": "CheckboxUncheckEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CheckboxUncheckEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FileListItemComponent",
                    "type": "component"
                },
                {
                    "name": "CheckboxComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { animate, group, query, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\r\nimport { DirectoryContentFile } from 'generated';\r\nimport {\r\n\tListItemSelectEvent,\r\n\tListItemUnselectEvent,\r\n} from 'src/app/features/content-list/components/pure-content-list/components/selectable-directory-list-item/selectable-directory-list-item.component';\r\nimport { CheckboxCheckEvent, CheckboxComponent, CheckboxUncheckEvent } from 'src/app/shared/components/checkbox/checkbox.component';\r\nimport { FileListItemComponent } from 'src/app/shared/components/file-list-item/file-list-item.component';\r\n\r\n@Component({\r\n\tstandalone: true,\r\n\tselector: 'selectable-file-list-item',\r\n\ttemplateUrl: './selectable-file-list-item.component.html',\r\n\tstyleUrl: './selectable-file-list-item.component.css',\r\n\timports: [FileListItemComponent, CheckboxComponent],\r\n\tanimations: [\r\n\t\ttrigger('isSelectable', [\r\n\t\t\tstate('true', style({})),\r\n\t\t\tstate('false', style({})),\r\n\t\t\ttransition('false => true', [\r\n\t\t\t\tquery('checkbox', [\r\n\t\t\t\t\tstyle({\r\n\t\t\t\t\t\tmarginLeft: '-2rem',\r\n\t\t\t\t\t\topacity: 0,\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tgroup([animate('0.25s ease-out', style({ opacity: 1 })), animate('0.3s ease', style({ marginLeft: 0 }))]),\r\n\t\t\t\t]),\r\n\t\t\t]),\r\n\t\t\ttransition('true => false', [\r\n\t\t\t\tquery('checkbox', [\r\n\t\t\t\t\tstyle({\r\n\t\t\t\t\t\tmarginLeft: 0,\r\n\t\t\t\t\t\topacity: 1,\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tgroup([animate('0.25s 0.05s ease', style({ opacity: 0 })), animate('0.3s ease', style({ marginLeft: '-2rem' }))]),\r\n\t\t\t\t]),\r\n\t\t\t]),\r\n\t\t]),\r\n\t],\r\n})\r\nexport class SelectableFileListItemComponent {\r\n\t@HostBinding('class.selected')\r\n\t@Input('isSelected')\r\n\tpublic isSelected: boolean = false;\r\n\r\n\t@HostBinding('class.selectable')\r\n\t@Input('isSelectable')\r\n\tpublic isSelectable: boolean = false;\r\n\r\n\t@Input({ required: true })\r\n\tpublic id!: number;\r\n\r\n\t@Input({ required: true })\r\n\tpublic metadata!: DirectoryContentFile;\r\n\r\n\t@Output()\r\n\tpublic onSelect: EventEmitter<ListItemSelectEvent> = new EventEmitter();\r\n\r\n\t@Output()\r\n\tpublic onUnselect: EventEmitter<ListItemUnselectEvent> = new EventEmitter();\r\n\r\n\tpublic onCheck(event: CheckboxCheckEvent) {\r\n\t\tthis.onSelect.emit({ id: this.id, ...event });\r\n\t}\r\n\r\n\tpublic onUncheck(event: CheckboxUncheckEvent) {\r\n\t\tthis.onUnselect.emit({ id: this.id, ...event });\r\n\t}\r\n}\r\n",
            "styleUrl": "./selectable-file-list-item.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<label [@isSelectable]=\"this.isSelectable\">\r\n\t<checkbox [isSelected]=\"this.isSelected\" (onCheck)=\"this.onCheck($event)\" (onUncheck)=\"this.onUncheck($event)\"></checkbox>\r\n\t<file-list-item [isSelected]=\"this.isSelected\" [metadata]=\"this.metadata\"></file-list-item>\r\n</label>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n\tproviders: [\r\n\t\tprovideAnimationsAsync(),\r\n\t\tprovideRouter(routes),\r\n\t\tprovideHttpClient(),\r\n\t\timportProvidersFrom(NgxsModule.forRoot([ContentListState, DirectoryTreeState]), NgxsLoggerPluginModule.forRoot()),\r\n\t],\r\n}"
            },
            {
                "name": "DirectoryTreeStateToken",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'directory_tree'"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[]"
            },
            {
                "name": "ThicknessMap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/loading-spinner/loading-spinner.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Record<Thickness, number>",
                "defaultValue": "{\r\n\t[Thickness.Thick]: 0.16,\r\n\t[Thickness.Regular]: 0.08,\r\n\t[Thickness.Thin]: 0.04,\r\n}"
            }
        ],
        "functions": [
            {
                "name": "isLeaf",
                "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "leafOrNode",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Leaf",
                "jsdoctags": [
                    {
                        "name": "leafOrNode",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "patchRecursive",
                "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "selector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "obj",
                        "type": "Object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stopOnMatch",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "true"
                    }
                ],
                "returnType": "StateOperator<Node | Leaf>",
                "jsdoctags": [
                    {
                        "name": "selector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "obj",
                        "type": "Object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stopOnMatch",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "true",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "CheckboxCheckEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/components/checkbox/checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "CheckboxUncheckEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/components/checkbox/checkbox.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ContentType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "File | Directory",
                "file": "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Directory",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "DirectoryTreeItemMetadata",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "DirectoryTreeStateModel",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Node | Leaf",
                "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "File",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "Leaf",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ListItemSelectEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/features/content-list/components/pure-content-list/components/selectable-directory-list-item/selectable-directory-list-item.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "ListItemUnselectEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/features/content-list/components/pure-content-list/components/selectable-directory-list-item/selectable-directory-list-item.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "Node",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "SelectEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shared/models/SelectedEvent.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            }
        ],
        "enumerations": [
            {
                "name": "Direction",
                "childs": [
                    {
                        "name": "Up",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "up"
                    },
                    {
                        "name": "Down",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "down"
                    },
                    {
                        "name": "Left",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "left"
                    },
                    {
                        "name": "Right",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "right"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/components/expanding-menu-button/expanding-menu-button.component.ts"
            },
            {
                "name": "Thickness",
                "childs": [
                    {
                        "name": "Thick",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "thick"
                    },
                    {
                        "name": "Regular",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "regular"
                    },
                    {
                        "name": "Thin",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "thin"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/components/loading-spinner/loading-spinner.component.ts"
            },
            {
                "name": "Type",
                "childs": [
                    {
                        "name": "Minimalistic",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "minimalistic"
                    },
                    {
                        "name": "Rounded",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "rounded"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/components/loading-spinner/loading-spinner.component.ts"
            },
            {
                "name": "Type",
                "childs": [
                    {
                        "name": "Directory",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "File",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts"
            }
        ],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n\tproviders: [\r\n\t\tprovideAnimationsAsync(),\r\n\t\tprovideRouter(routes),\r\n\t\tprovideHttpClient(),\r\n\t\timportProvidersFrom(NgxsModule.forRoot([ContentListState, DirectoryTreeState]), NgxsLoggerPluginModule.forRoot()),\r\n\t],\r\n}"
                }
            ],
            "src/app/features/directory-tree/state/directory-tree.state.ts": [
                {
                    "name": "DirectoryTreeStateToken",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'directory_tree'"
                }
            ],
            "src/app/app.routes.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[]"
                }
            ],
            "src/app/shared/components/loading-spinner/loading-spinner.component.ts": [
                {
                    "name": "ThicknessMap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/loading-spinner/loading-spinner.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<Thickness, number>",
                    "defaultValue": "{\r\n\t[Thickness.Thick]: 0.16,\r\n\t[Thickness.Regular]: 0.08,\r\n\t[Thickness.Thin]: 0.04,\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/features/directory-tree/state/directory-tree.state.ts": [
                {
                    "name": "isLeaf",
                    "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "leafOrNode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Leaf",
                    "jsdoctags": [
                        {
                            "name": "leafOrNode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "patchRecursive",
                    "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "selector",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "obj",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "stopOnMatch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        }
                    ],
                    "returnType": "StateOperator<Node | Leaf>",
                    "jsdoctags": [
                        {
                            "name": "selector",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "obj",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "stopOnMatch",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/components/expanding-menu-button/expanding-menu-button.component.ts": [
                {
                    "name": "Direction",
                    "childs": [
                        {
                            "name": "Up",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "up"
                        },
                        {
                            "name": "Down",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "down"
                        },
                        {
                            "name": "Left",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "left"
                        },
                        {
                            "name": "Right",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "right"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/components/expanding-menu-button/expanding-menu-button.component.ts"
                }
            ],
            "src/app/shared/components/loading-spinner/loading-spinner.component.ts": [
                {
                    "name": "Thickness",
                    "childs": [
                        {
                            "name": "Thick",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "thick"
                        },
                        {
                            "name": "Regular",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "regular"
                        },
                        {
                            "name": "Thin",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "thin"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/components/loading-spinner/loading-spinner.component.ts"
                },
                {
                    "name": "Type",
                    "childs": [
                        {
                            "name": "Minimalistic",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "minimalistic"
                        },
                        {
                            "name": "Rounded",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "rounded"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/components/loading-spinner/loading-spinner.component.ts"
                }
            ],
            "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts": [
                {
                    "name": "Type",
                    "childs": [
                        {
                            "name": "Directory",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/components/checkbox/checkbox.component.ts": [
                {
                    "name": "CheckboxCheckEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/components/checkbox/checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "CheckboxUncheckEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/components/checkbox/checkbox.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts": [
                {
                    "name": "ContentType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "File | Directory",
                    "file": "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "Directory",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "File",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/features/directory-tree/state/directory-tree.state.ts": [
                {
                    "name": "DirectoryTreeItemMetadata",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "DirectoryTreeStateModel",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Node | Leaf",
                    "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "Leaf",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "Node",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/features/directory-tree/state/directory-tree.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/features/content-list/components/pure-content-list/components/selectable-directory-list-item/selectable-directory-list-item.component.ts": [
                {
                    "name": "ListItemSelectEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/features/content-list/components/pure-content-list/components/selectable-directory-list-item/selectable-directory-list-item.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "ListItemUnselectEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/features/content-list/components/pure-content-list/components/selectable-directory-list-item/selectable-directory-list-item.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "src/app/shared/models/SelectedEvent.ts": [
                {
                    "name": "SelectEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shared/models/SelectedEvent.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/components/pure-content-list/components/selectable-directory-list-item/selectable-directory-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectableDirectoryListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/components/pure-content-list/components/selectable-file-list-item/selectable-file-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectableFileListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/components/pure-content-list/pure-content-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PureContentListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/content-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContentListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/content-list.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ContentListService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/state/content-list.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CtrlSelect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/state/content-list.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CtrlUnselect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/state/content-list.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SelectAll",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/state/content-list.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SelectSingle",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/state/content-list.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ShiftSelect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/state/content-list.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ShiftUnselect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/state/content-list.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UnselectAll",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/state/content-list.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UnselectSingle",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/state/content-list.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ContentListState",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/features/content-list/state/content-list.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ContentListStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/features/directory-tree/components/pure-directory-tree/components/directory-tree-item/directory-tree-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DirectoryTreeItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/features/directory-tree/components/pure-directory-tree/pure-directory-tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PureDirectoryTreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/directory-tree/directory-tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DirectoryTreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/features/directory-tree/state/directory-tree.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Collapse",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/directory-tree/state/directory-tree.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Expand",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/directory-tree/state/directory-tree.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DirectoryTreeState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isLeaf",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "patchRecursive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/directory-tree/state/directory-tree.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DirectoryTreeStateToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/directory-list-item/directory-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DirectoryListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/expanding-menu-button/expanding-menu-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpandingMenuButtonComponent",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/shared/components/file-list-item/file-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/loading-spinner/loading-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingSpinnerComponent",
                "coveragePercent": 57,
                "coverageCount": "8/14",
                "status": "good"
            },
            {
                "filePath": "src/app/shared/components/loading-spinner/loading-spinner.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ThicknessMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/IDeletable.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDeletable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/IDownloadable.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDownloadable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/IRenamable.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRenamable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/ISelectable.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISelectable",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            }
        ]
    }
}